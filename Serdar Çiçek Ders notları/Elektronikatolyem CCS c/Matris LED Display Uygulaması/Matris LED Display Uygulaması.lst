CCS PCM C Compiler, Version 5.049, 5967               29-Mar-22 00:10

               Filename:   C:\Users\Asus\Desktop\GAZÝ NOT\mikroiþlemci\Elektronikatolyem CCS c\Matris LED Display Uygulamasý\Matris LED Display Uygulamasý.lst

               ROM used:   226 words (3%)
                           Largest free fragment is 2048
               RAM used:   40 (11%) at main() level
                           46 (12%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05D
0003:  NOP
.................... /****************************************************** 
....................  Uygulama Adý      : Matris LED Display Uygulamas 
.................... *******************************************************/ 
.................... #include <16f877.h>     // Kullanýlacak denetleyicinin baþlýk dosyasý tanýtýlýyor. 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
*
0020:  BCF    0A.0
0021:  BCF    0A.1
0022:  BCF    0A.2
0023:  ADDWF  02,F
0024:  GOTO   00A
0025:  GOTO   00E
0026:  GOTO   012
0027:  GOTO   016
0028:  GOTO   01A
....................  
.................... #list 
....................  
....................  
.................... //***********Denetleyici konfigürasyon ayarlarý************ 
.................... #fuses XT,NOWDT,NOPROTECT,NOBROWNOUT,NOLVP,NOPUT,NOWRT,NODEBUG,NOCPD 
....................  
.................... #use delay(clock=4000000)   // Gecikme fonksiyonu için kullanýlan osilatör frekansý belirtiliyor 
*
0044:  MOVLW  48
0045:  MOVWF  04
0046:  BCF    03.7
0047:  MOVF   00,W
0048:  BTFSC  03.2
0049:  GOTO   058
004A:  MOVLW  01
004B:  MOVWF  78
004C:  CLRF   77
004D:  DECFSZ 77,F
004E:  GOTO   04D
004F:  DECFSZ 78,F
0050:  GOTO   04C
0051:  MOVLW  4A
0052:  MOVWF  77
0053:  DECFSZ 77,F
0054:  GOTO   053
0055:  GOTO   056
0056:  DECFSZ 00,F
0057:  GOTO   04A
....................  
.................... #use fast_io(b) // Port yönlendirme komutlarý B portu için geçerli 
.................... #use fast_io(c) // Port yönlendirme komutlarý C portu için geçerli 
....................  
.................... //******** Matrise Gönderilecek Karakter Bilgileri ******* 
....................  int A[]={0x03,0x75,0x76,0x75,0X03}; 
*
0066:  MOVLW  03
0067:  BCF    03.5
0068:  MOVWF  20
0069:  MOVLW  75
006A:  MOVWF  21
006B:  MOVLW  76
006C:  MOVWF  22
006D:  MOVLW  75
006E:  MOVWF  23
006F:  MOVLW  03
0070:  MOVWF  24
....................  int B[]={0x00,0X36,0X36,0x36,0X49}; 
0071:  CLRF   25
0072:  MOVLW  36
0073:  MOVWF  26
0074:  MOVWF  27
0075:  MOVWF  28
0076:  MOVLW  49
0077:  MOVWF  29
....................  int C[]={0x41,0x3E,0x3E,0x3E,0x5D}; 
0078:  MOVLW  41
0079:  MOVWF  2A
007A:  MOVLW  3E
007B:  MOVWF  2B
007C:  MOVWF  2C
007D:  MOVWF  2D
007E:  MOVLW  5D
007F:  MOVWF  2E
....................  int D[]={0x00,0x3E,0x3E,0x3E,0x41}; 
0080:  CLRF   2F
0081:  MOVLW  3E
0082:  MOVWF  30
0083:  MOVWF  31
0084:  MOVWF  32
0085:  MOVLW  41
0086:  MOVWF  33
....................  int E[]={0x00,0xB6,0xB6,0xB6,0xBE}; 
0087:  CLRF   34
0088:  MOVLW  B6
0089:  MOVWF  35
008A:  MOVWF  36
008B:  MOVWF  37
008C:  MOVLW  BE
008D:  MOVWF  38
....................  int arti[]={0x77,0x77,0x41,0x77,0x77}; 
008E:  MOVLW  77
008F:  MOVWF  39
0090:  MOVWF  3A
0091:  MOVLW  41
0092:  MOVWF  3B
0093:  MOVLW  77
0094:  MOVWF  3C
0095:  MOVWF  3D
....................  int cift_ok[]={0x6B,0x5D,0x00,0x5D,0x6B}; 
0096:  MOVLW  6B
0097:  MOVWF  3E
0098:  MOVLW  5D
0099:  MOVWF  3F
009A:  CLRF   40
009B:  MOVWF  41
009C:  MOVLW  6B
009D:  MOVWF  42
....................  
.................... //******* Sütun Seçme Fonksiyonu ************ 
.................... int sutunsec (int s) 
.................... { 
....................    switch (s) 
*
0004:  MOVF   48,W
0005:  ADDLW  FB
0006:  BTFSC  03.0
0007:  GOTO   01D
0008:  ADDLW  05
0009:  GOTO   020
....................    { 
....................       case 0: return(0x10);break;  // 1. Sütun aktif, diðer sütunlar pasif 
000A:  MOVLW  10
000B:  MOVWF  78
000C:  GOTO   01D
000D:  GOTO   01D
....................       case 1: return(0x08);break;  // 2. Sütun aktif, diðer sütunlar pasif 
000E:  MOVLW  08
000F:  MOVWF  78
0010:  GOTO   01D
0011:  GOTO   01D
....................       case 2: return(0x04);break;  // 3. Sütun aktif, diðer sütunlar pasif 
0012:  MOVLW  04
0013:  MOVWF  78
0014:  GOTO   01D
0015:  GOTO   01D
....................       case 3: return(0x02);break;  // 4. Sütun aktif, diðer sütunlar pasif 
0016:  MOVLW  02
0017:  MOVWF  78
0018:  GOTO   01D
0019:  GOTO   01D
....................       case 4: return(0x01);break;  // 5. Sütun aktif, diðer sütunlar pasif 
001A:  MOVLW  01
001B:  MOVWF  78
001C:  GOTO   01D
....................    } 
001D:  BCF    0A.3
001E:  BCF    0A.4
001F:  GOTO   037 (RETURN)
.................... } 
....................  
.................... //******* Matrise Veri Gönderme Fonksiyonu ******* 
.................... void matris_karakter_gonder(char harf[], int tekrar) 
.................... { 
....................    int i,j;  // Deðiþkenler tanýmlanýyor 
....................  
....................    for (i=1;i<tekrar;i++)  // Karakterin Matris LED'de görünmesi için tekrar döngüsü 
*
0029:  MOVLW  01
002A:  MOVWF  46
002B:  MOVF   45,W
002C:  SUBWF  46,W
002D:  BTFSC  03.0
002E:  GOTO   05C
....................        { 
....................          for(j=0;j<5;j++) // // Bu döngüde tarama iþlemi yapýlýyor 
002F:  CLRF   47
0030:  MOVF   47,W
0031:  SUBLW  04
0032:  BTFSS  03.0
0033:  GOTO   05A
....................          { 
....................             output_c(sutunsec(j)); // Sütun seç ve C portuna sütun deðerini gönder 
0034:  MOVF   47,W
0035:  MOVWF  48
0036:  GOTO   004
0037:  MOVF   78,W
0038:  MOVWF  07
....................             output_b(harf[j]);     // Gösterilecek harfin satýr bilgisini B portuna gönder 
0039:  MOVF   47,W
003A:  ADDWF  43,W
003B:  MOVWF  04
003C:  BCF    03.7
003D:  BTFSC  44.0
003E:  BSF    03.7
003F:  MOVF   00,W
0040:  MOVWF  48
0041:  MOVWF  06
....................             delay_ms(10);          // Gecikme veriliyor 
0042:  MOVLW  0A
0043:  MOVWF  48
*
0058:  INCF   47,F
0059:  GOTO   030
....................          } 
005A:  INCF   46,F
005B:  GOTO   02B
....................       } 
005C:  RETURN
.................... } 
....................  
.................... /********* ANA PROGRAM FONKSÝYONU********/ 
....................  
.................... void main () 
005D:  MOVF   03,W
005E:  ANDLW  1F
005F:  MOVWF  03
0060:  BSF    03.5
0061:  BSF    1F.0
0062:  BSF    1F.1
0063:  BSF    1F.2
0064:  BCF    1F.3
0065:  BCF    03.7
.................... {  
....................    setup_psp(PSP_DISABLED);        // PSP birimi devre dýþý 
*
009E:  BSF    03.5
009F:  BCF    09.4
....................    setup_timer_1(T1_DISABLED);     // T1 zamanlayýcýsý devre dýþý 
00A0:  BCF    03.5
00A1:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); // T2 zamanlayýcýsý devre dýþý 
00A2:  MOVLW  00
00A3:  MOVWF  78
00A4:  MOVWF  12
00A5:  MOVLW  00
00A6:  BSF    03.5
00A7:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS);    // ANALOG giriþ yok 
00A8:  BSF    1F.0
00A9:  BSF    1F.1
00AA:  BSF    1F.2
00AB:  BCF    1F.3
....................    setup_adc(ADC_OFF);             // ADC birimi devre dýþý 
00AC:  BCF    03.5
00AD:  BCF    1F.0
....................    setup_CCP1(CCP_OFF);            // CCP1 birimi devre dýþý 
00AE:  MOVLW  F0
00AF:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF);            // CCP2 birimi devre dýþý 
00B0:  ANDWF  1D,F
....................  
....................    set_tris_b(0x00);  // B portu tümüyle çýkýþ olarak yönlendiriliyor 
00B1:  MOVLW  00
00B2:  BSF    03.5
00B3:  MOVWF  06
....................    set_tris_c(0x00);  // C portu tümüyle çýkýþ olarak yönlendiriliyor 
00B4:  MOVWF  07
....................  
....................    while(1) 
....................    { 
....................         matris_karakter_gonder(A,25);// A karakterini matriste göster 
00B5:  BCF    03.5
00B6:  CLRF   44
00B7:  MOVLW  20
00B8:  MOVWF  43
00B9:  MOVLW  19
00BA:  MOVWF  45
00BB:  CALL   029
....................         matris_karakter_gonder(B,25);// B karakterini matriste göster 
00BC:  CLRF   44
00BD:  MOVLW  25
00BE:  MOVWF  43
00BF:  MOVLW  19
00C0:  MOVWF  45
00C1:  CALL   029
....................         matris_karakter_gonder(C,25);// C karakterini matriste göster 
00C2:  CLRF   44
00C3:  MOVLW  2A
00C4:  MOVWF  43
00C5:  MOVLW  19
00C6:  MOVWF  45
00C7:  CALL   029
....................         matris_karakter_gonder(D,25);// D karakterini matriste göster 
00C8:  CLRF   44
00C9:  MOVLW  2F
00CA:  MOVWF  43
00CB:  MOVLW  19
00CC:  MOVWF  45
00CD:  CALL   029
....................         matris_karakter_gonder(E,25);// E karakterini matriste göster 
00CE:  CLRF   44
00CF:  MOVLW  34
00D0:  MOVWF  43
00D1:  MOVLW  19
00D2:  MOVWF  45
00D3:  CALL   029
....................         matris_karakter_gonder(arti,25);//+ karakterini matriste göster 
00D4:  CLRF   44
00D5:  MOVLW  39
00D6:  MOVWF  43
00D7:  MOVLW  19
00D8:  MOVWF  45
00D9:  CALL   029
....................         matris_karakter_gonder(cift_ok,25);// Çift yönlü ok karakterini matriste göster 
00DA:  CLRF   44
00DB:  MOVLW  3E
00DC:  MOVWF  43
00DD:  MOVLW  19
00DE:  MOVWF  45
00DF:  CALL   029
00E0:  GOTO   0B6
....................  
....................    } 
.................... } 
....................  
00E1:  SLEEP

Configuration Fuses:
   Word  1: 3B39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
