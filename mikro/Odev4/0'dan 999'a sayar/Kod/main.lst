CCS PCM C Compiler, Version 5.015, 5967               29-Mar-23 01:05

               Filename:   E:\Okul\Mikro\mikro\Odev4\0'dan 999'a sayar\Kod\main.lst

               ROM used:   477 words (6%)
                           Largest free fragment is 2048
               RAM used:   28 (8%) at main() level
                           33 (9%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0D5
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
0099:  CLRF   78
009A:  CLRF   79
009B:  CLRF   77
009C:  CLRF   7A
009D:  MOVF   3A,W
009E:  BTFSS  03.2
009F:  GOTO   0A3
00A0:  MOVF   39,W
00A1:  BTFSC  03.2
00A2:  GOTO   0BD
00A3:  MOVLW  10
00A4:  MOVWF  3B
00A5:  BCF    03.0
00A6:  RLF    37,F
00A7:  RLF    38,F
00A8:  RLF    77,F
00A9:  RLF    7A,F
00AA:  MOVF   3A,W
00AB:  SUBWF  7A,W
00AC:  BTFSS  03.2
00AD:  GOTO   0B0
00AE:  MOVF   39,W
00AF:  SUBWF  77,W
00B0:  BTFSS  03.0
00B1:  GOTO   0B9
00B2:  MOVF   39,W
00B3:  SUBWF  77,F
00B4:  BTFSS  03.0
00B5:  DECF   7A,F
00B6:  MOVF   3A,W
00B7:  SUBWF  7A,F
00B8:  BSF    03.0
00B9:  RLF    78,F
00BA:  RLF    79,F
00BB:  DECFSZ 3B,F
00BC:  GOTO   0A5
00BD:  RETURN
00BE:  MOVF   38,W
00BF:  CLRF   78
00C0:  SUBWF  37,W
00C1:  BTFSC  03.0
00C2:  GOTO   0C6
00C3:  MOVF   37,W
00C4:  MOVWF  77
00C5:  GOTO   0D2
00C6:  CLRF   77
00C7:  MOVLW  08
00C8:  MOVWF  39
00C9:  RLF    37,F
00CA:  RLF    77,F
00CB:  MOVF   38,W
00CC:  SUBWF  77,W
00CD:  BTFSC  03.0
00CE:  MOVWF  77
00CF:  RLF    78,F
00D0:  DECFSZ 39,F
00D1:  GOTO   0C9
00D2:  BCF    0A.3
00D3:  BCF    0A.4
00D4:  GOTO   145 (RETURN)
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPROTECT  
.................... #use delay(clock=4000000) 
*
0004:  MOVLW  37
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
.................... #define pin_up   pin_A0 
.................... #define pin_down pin_A1 
.................... #define pin_stop pin_A2 
.................... #define display1 pin_C0 
.................... #define display2 pin_C1 
.................... #define display3 pin_C2 
.................... int holder=0; 
.................... int birler,x,a,onlar, yuzler= 0; 
.................... unsigned long int digit = 0; 
.................... int down, up, stop= 0; 
.................... int number[10] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7C, 0x07, 0x7F, 0x6F}; 
*
00E7:  MOVLW  3F
00E8:  BCF    03.5
00E9:  MOVWF  2B
00EA:  MOVLW  06
00EB:  MOVWF  2C
00EC:  MOVLW  5B
00ED:  MOVWF  2D
00EE:  MOVLW  4F
00EF:  MOVWF  2E
00F0:  MOVLW  66
00F1:  MOVWF  2F
00F2:  MOVLW  6D
00F3:  MOVWF  30
00F4:  MOVLW  7C
00F5:  MOVWF  31
00F6:  MOVLW  07
00F7:  MOVWF  32
00F8:  MOVLW  7F
00F9:  MOVWF  33
00FA:  MOVLW  6F
00FB:  MOVWF  34
....................  
.................... void button_up() 
.................... { 
....................     if(!input(pin_stop) && input(pin_up) && !input(pin_down)) 
*
0019:  BSF    03.5
001A:  BSF    05.2
001B:  BCF    03.5
001C:  BTFSC  05.2
001D:  GOTO   03D
001E:  BSF    03.5
001F:  BSF    05.0
0020:  BCF    03.5
0021:  BTFSS  05.0
0022:  GOTO   03D
0023:  BSF    03.5
0024:  BSF    05.1
0025:  BCF    03.5
0026:  BTFSC  05.1
0027:  GOTO   03D
....................    { 
....................       delay_ms(15); 
0028:  MOVLW  0F
0029:  MOVWF  37
002A:  CALL   004
....................       up = 1; 
002B:  MOVLW  01
002C:  MOVWF  29
....................       down, stop = 0; 
002D:  CLRF   2A
....................       if (digit==999) 
002E:  MOVF   26,W
002F:  SUBLW  E7
0030:  BTFSS  03.2
0031:  GOTO   038
0032:  MOVF   27,W
0033:  SUBLW  03
0034:  BTFSS  03.2
0035:  GOTO   038
....................       digit=0; 
0036:  CLRF   27
0037:  CLRF   26
....................       while(input(pin_up)); 
0038:  BSF    03.5
0039:  BSF    05.0
003A:  BCF    03.5
003B:  BTFSC  05.0
003C:  GOTO   038
....................    } 
003D:  BCF    0A.3
003E:  BCF    0A.4
003F:  GOTO   125 (RETURN)
.................... } 
....................  
.................... void button_down() 
.................... { 
....................    if(!input(pin_stop) && !input(pin_up) && input(pin_down)) 
0040:  BSF    03.5
0041:  BSF    05.2
0042:  BCF    03.5
0043:  BTFSC  05.2
0044:  GOTO   064
0045:  BSF    03.5
0046:  BSF    05.0
0047:  BCF    03.5
0048:  BTFSC  05.0
0049:  GOTO   064
004A:  BSF    03.5
004B:  BSF    05.1
004C:  BCF    03.5
004D:  BTFSS  05.1
004E:  GOTO   064
....................    { 
....................       delay_ms(15); 
004F:  MOVLW  0F
0050:  MOVWF  37
0051:  CALL   004
....................       down = 1; 
0052:  MOVLW  01
0053:  MOVWF  28
....................       up , stop = 0; 
0054:  CLRF   2A
....................       if(digit==0) 
0055:  MOVF   26,F
0056:  BTFSS  03.2
0057:  GOTO   05F
0058:  MOVF   27,F
0059:  BTFSS  03.2
005A:  GOTO   05F
....................       digit = 999; 
005B:  MOVLW  03
005C:  MOVWF  27
005D:  MOVLW  E7
005E:  MOVWF  26
....................       while(input(pin_down)); 
005F:  BSF    03.5
0060:  BSF    05.1
0061:  BCF    03.5
0062:  BTFSC  05.1
0063:  GOTO   05F
....................    } 
0064:  BCF    0A.3
0065:  BCF    0A.4
0066:  GOTO   126 (RETURN)
.................... } 
....................  
.................... void button_stop() 
.................... { 
....................    if(input(pin_stop) && !input(pin_up) && !input(pin_down)) 
0067:  BSF    03.5
0068:  BSF    05.2
0069:  BCF    03.5
006A:  BTFSS  05.2
006B:  GOTO   098
006C:  BSF    03.5
006D:  BSF    05.0
006E:  BCF    03.5
006F:  BTFSC  05.0
0070:  GOTO   098
0071:  BSF    03.5
0072:  BSF    05.1
0073:  BCF    03.5
0074:  BTFSC  05.1
0075:  GOTO   098
....................    { 
....................      birler,x,a = 0; 
0076:  CLRF   23
....................  
....................      down, up= 0;    
0077:  CLRF   29
....................      stop = 1; 
0078:  MOVLW  01
0079:  MOVWF  2A
....................      up, down = 0; 
007A:  CLRF   28
....................      output_b(0x00); 
007B:  BSF    03.5
007C:  CLRF   06
007D:  BCF    03.5
007E:  CLRF   06
....................      output_high(display1); 
007F:  BCF    35.0
0080:  MOVF   35,W
0081:  BSF    03.5
0082:  MOVWF  07
0083:  BCF    03.5
0084:  BSF    07.0
....................      output_high(display2); 
0085:  BCF    35.1
0086:  MOVF   35,W
0087:  BSF    03.5
0088:  MOVWF  07
0089:  BCF    03.5
008A:  BSF    07.1
....................      output_high(display3); 
008B:  BCF    35.2
008C:  MOVF   35,W
008D:  BSF    03.5
008E:  MOVWF  07
008F:  BCF    03.5
0090:  BSF    07.2
....................      digit=0; 
0091:  CLRF   27
0092:  CLRF   26
....................      while(input(pin_stop)); 
0093:  BSF    03.5
0094:  BSF    05.2
0095:  BCF    03.5
0096:  BTFSC  05.2
0097:  GOTO   093
....................    } 
0098:  RETURN
....................  
.................... } 
....................  
....................  
.................... void main() 
*
00D5:  MOVF   03,W
00D6:  ANDLW  1F
00D7:  MOVWF  03
00D8:  CLRF   20
00D9:  CLRF   25
00DA:  CLRF   27
00DB:  CLRF   26
00DC:  CLRF   2A
00DD:  MOVLW  FF
00DE:  MOVWF  35
00DF:  BSF    03.5
00E0:  BSF    1F.0
00E1:  BSF    1F.1
00E2:  BSF    1F.2
00E3:  BCF    1F.3
00E4:  MOVLW  07
00E5:  MOVWF  1C
00E6:  BCF    03.7
.................... { 
....................     
....................    set_tris_a(0xFF); 
*
00FC:  MOVLW  FF
00FD:  BSF    03.5
00FE:  MOVWF  05
....................    set_tris_b(0x00); 
00FF:  MOVLW  00
0100:  MOVWF  06
....................    set_tris_c(0x00); 
0101:  MOVWF  07
0102:  BCF    03.5
0103:  MOVWF  35
....................    output_b(0x00); 
0104:  BSF    03.5
0105:  CLRF   06
0106:  BCF    03.5
0107:  CLRF   06
....................    output_high(display1); 
0108:  BCF    35.0
0109:  MOVF   35,W
010A:  BSF    03.5
010B:  MOVWF  07
010C:  BCF    03.5
010D:  BSF    07.0
....................    output_high(display2); 
010E:  BCF    35.1
010F:  MOVF   35,W
0110:  BSF    03.5
0111:  MOVWF  07
0112:  BCF    03.5
0113:  BSF    07.1
....................  
....................    while(TRUE) 
....................    {   
....................       output_b(0x00); 
0114:  BSF    03.5
0115:  CLRF   06
0116:  BCF    03.5
0117:  CLRF   06
....................       output_high(display1); 
0118:  BCF    35.0
0119:  MOVF   35,W
011A:  BSF    03.5
011B:  MOVWF  07
011C:  BCF    03.5
011D:  BSF    07.0
....................       output_high(display2); 
011E:  BCF    35.1
011F:  MOVF   35,W
0120:  BSF    03.5
0121:  MOVWF  07
0122:  BCF    03.5
0123:  BSF    07.1
....................       button_up(); 
0124:  GOTO   019
....................       button_down(); 
0125:  GOTO   040
....................       button_stop(); 
0126:  CALL   067
....................        while(up == 1 || down == 1) 
0127:  DECFSZ 29,W
0128:  GOTO   12A
0129:  GOTO   12C
012A:  DECFSZ 28,W
012B:  GOTO   1DB
....................       {      
....................              
....................             birler = digit % 10 ; //birler 
012C:  MOVF   27,W
012D:  MOVWF  38
012E:  MOVF   26,W
012F:  MOVWF  37
0130:  CLRF   3A
0131:  MOVLW  0A
0132:  MOVWF  39
0133:  CALL   099
0134:  MOVF   77,W
0135:  MOVWF  21
....................             holder = digit % 100 ; //onlar 
0136:  MOVF   27,W
0137:  MOVWF  38
0138:  MOVF   26,W
0139:  MOVWF  37
013A:  CLRF   3A
013B:  MOVLW  64
013C:  MOVWF  39
013D:  CALL   099
013E:  MOVF   77,W
013F:  MOVWF  20
....................             onlar = holder / 10;   //onlar 
0140:  MOVF   20,W
0141:  MOVWF  37
0142:  MOVLW  0A
0143:  MOVWF  38
0144:  GOTO   0BE
0145:  MOVF   78,W
0146:  MOVWF  24
....................             yuzler = digit/100; //yuzler 
0147:  MOVF   27,W
0148:  MOVWF  38
0149:  MOVF   26,W
014A:  MOVWF  37
014B:  CLRF   3A
014C:  MOVLW  64
014D:  MOVWF  39
014E:  CALL   099
014F:  MOVF   78,W
0150:  MOVWF  25
....................              
....................             if(up==1) 
0151:  DECFSZ 29,W
0152:  GOTO   160
....................             { 
....................             digit++;  
0153:  INCF   26,F
0154:  BTFSC  03.2
0155:  INCF   27,F
....................             if(digit == 1000) 
0156:  MOVF   26,W
0157:  SUBLW  E8
0158:  BTFSS  03.2
0159:  GOTO   160
015A:  MOVF   27,W
015B:  SUBLW  03
015C:  BTFSS  03.2
015D:  GOTO   160
....................             digit=0; 
015E:  CLRF   27
015F:  CLRF   26
....................             } 
....................              
....................             if(down==1) 
0160:  DECFSZ 28,W
0161:  GOTO   16E
....................             { 
....................             digit--; 
0162:  MOVF   26,W
0163:  BTFSC  03.2
0164:  DECF   27,F
0165:  DECFSZ 26,F
....................             if(digit == 0) 
0166:  GOTO   16E
0167:  MOVF   27,F
0168:  BTFSS  03.2
0169:  GOTO   16E
....................             digit=999;           
016A:  MOVLW  03
016B:  MOVWF  27
016C:  MOVLW  E7
016D:  MOVWF  26
....................             } 
....................              
....................             for(int k=0; k<4 ; k++) 
016E:  CLRF   36
016F:  MOVF   36,W
0170:  SUBLW  03
0171:  BTFSS  03.0
0172:  GOTO   1D7
....................                { 
....................                   output_high(display1); 
0173:  BCF    35.0
0174:  MOVF   35,W
0175:  BSF    03.5
0176:  MOVWF  07
0177:  BCF    03.5
0178:  BSF    07.0
....................                   output_b(number[birler]); 
0179:  MOVLW  2B
017A:  ADDWF  21,W
017B:  MOVWF  04
017C:  BCF    03.7
017D:  MOVF   00,W
017E:  MOVWF  37
017F:  BSF    03.5
0180:  CLRF   06
0181:  BCF    03.5
0182:  MOVF   37,W
0183:  MOVWF  06
....................                   delay_ms(5); 
0184:  MOVLW  05
0185:  MOVWF  37
0186:  CALL   004
....................                   output_low(display1); 
0187:  BCF    35.0
0188:  MOVF   35,W
0189:  BSF    03.5
018A:  MOVWF  07
018B:  BCF    03.5
018C:  BCF    07.0
....................                    
....................                   output_high(display2); 
018D:  BCF    35.1
018E:  MOVF   35,W
018F:  BSF    03.5
0190:  MOVWF  07
0191:  BCF    03.5
0192:  BSF    07.1
....................                   output_b(number[onlar]); 
0193:  MOVLW  2B
0194:  ADDWF  24,W
0195:  MOVWF  04
0196:  BCF    03.7
0197:  MOVF   00,W
0198:  MOVWF  37
0199:  BSF    03.5
019A:  CLRF   06
019B:  BCF    03.5
019C:  MOVF   37,W
019D:  MOVWF  06
....................                   delay_ms(5); 
019E:  MOVLW  05
019F:  MOVWF  37
01A0:  CALL   004
....................                   output_low(display2); 
01A1:  BCF    35.1
01A2:  MOVF   35,W
01A3:  BSF    03.5
01A4:  MOVWF  07
01A5:  BCF    03.5
01A6:  BCF    07.1
....................                    
....................                   output_high(display3); 
01A7:  BCF    35.2
01A8:  MOVF   35,W
01A9:  BSF    03.5
01AA:  MOVWF  07
01AB:  BCF    03.5
01AC:  BSF    07.2
....................                   output_b(number[yuzler]); 
01AD:  MOVLW  2B
01AE:  ADDWF  25,W
01AF:  MOVWF  04
01B0:  BCF    03.7
01B1:  MOVF   00,W
01B2:  MOVWF  37
01B3:  BSF    03.5
01B4:  CLRF   06
01B5:  BCF    03.5
01B6:  MOVF   37,W
01B7:  MOVWF  06
....................                   delay_ms(5); 
01B8:  MOVLW  05
01B9:  MOVWF  37
01BA:  CALL   004
....................                   output_low(display3); 
01BB:  BCF    35.2
01BC:  MOVF   35,W
01BD:  BSF    03.5
01BE:  MOVWF  07
01BF:  BCF    03.5
01C0:  BCF    07.2
....................                    
....................                   button_stop(); 
01C1:  CALL   067
....................                   if(input(pin_down)) 
01C2:  BSF    03.5
01C3:  BSF    05.1
01C4:  BCF    03.5
01C5:  BTFSS  05.1
01C6:  GOTO   1CA
....................                   { 
....................                   down=1; 
01C7:  MOVLW  01
01C8:  MOVWF  28
....................                   up = 0; 
01C9:  CLRF   29
....................                   } 
....................                   if(input(pin_up)) 
01CA:  BSF    03.5
01CB:  BSF    05.0
01CC:  BCF    03.5
01CD:  BTFSS  05.0
01CE:  GOTO   1D2
....................                   { 
....................                   down=0; 
01CF:  CLRF   28
....................                   up = 1; 
01D0:  MOVLW  01
01D1:  MOVWF  29
....................                   } 
....................                   if(stop == 1) 
01D2:  DECFSZ 2A,W
01D3:  GOTO   1D5
....................                   { 
....................                      break; 
01D4:  GOTO   1D7
....................                   } 
01D5:  INCF   36,F
01D6:  GOTO   16F
....................                } 
....................                         
....................              if(stop == 1) 
01D7:  DECFSZ 2A,W
01D8:  GOTO   1DA
....................              { 
....................                break; 
01D9:  GOTO   1DB
....................              } 
01DA:  GOTO   127
....................         } 
01DB:  GOTO   114
....................  
....................          
....................    } 
.................... } 
....................  
01DC:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
