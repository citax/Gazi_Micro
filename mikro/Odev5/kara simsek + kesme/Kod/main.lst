CCS PCM C Compiler, Version 5.015, 5967               05-Nis-23 07:02

               Filename:   E:\Okul\Mikro\mikro\Odev5\kara simsek + kesme\Kod\main.lst

               ROM used:   264 words (3%)
                           Largest free fragment is 2048
               RAM used:   16 (4%) at main() level
                           24 (7%) worst case
               Stack used: 3 locations (1 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   09C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   044
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPROTECT  
.................... #use delay(clock=4000000) 
002F:  MOVLW  32
0030:  MOVWF  04
0031:  BCF    03.7
0032:  MOVF   00,W
0033:  BTFSC  03.2
0034:  GOTO   043
0035:  MOVLW  01
0036:  MOVWF  78
0037:  CLRF   77
0038:  DECFSZ 77,F
0039:  GOTO   038
003A:  DECFSZ 78,F
003B:  GOTO   037
003C:  MOVLW  4A
003D:  MOVWF  77
003E:  DECFSZ 77,F
003F:  GOTO   03E
0040:  GOTO   041
0041:  DECFSZ 00,F
0042:  GOTO   035
0043:  RETURN
.................... #define pin_start pin_A0 
.................... #define pin_stop pin_A1 
.................... #define pin_led pin_B1 
.................... int start,stop= 0; 
.................... int led = 0x01; 
....................  
.................... #int_ext 
....................  
.................... void interrupt() 
.................... { 
....................    output_high(pin_led); 
0044:  BSF    03.5
0045:  BCF    06.1
0046:  BCF    03.5
0047:  BSF    06.1
....................    delay_ms(1000);  
0048:  MOVLW  04
0049:  MOVWF  31
004A:  MOVLW  FA
004B:  MOVWF  32
004C:  CALL   02F
004D:  DECFSZ 31,F
004E:  GOTO   04A
....................    output_low(pin_led);  
004F:  BSF    03.5
0050:  BCF    06.1
0051:  BCF    03.5
0052:  BCF    06.1
....................    delay_ms(3000); 
0053:  MOVLW  0C
0054:  MOVWF  31
0055:  MOVLW  FA
0056:  MOVWF  32
0057:  CALL   02F
0058:  DECFSZ 31,F
0059:  GOTO   055
....................  
....................    for (int t=0;t<6;t++) 
005A:  CLRF   30
005B:  MOVF   30,W
005C:  SUBLW  05
005D:  BTFSS  03.0
005E:  GOTO   077
....................    { 
....................       output_high(pin_led);  
005F:  BSF    03.5
0060:  BCF    06.1
0061:  BCF    03.5
0062:  BSF    06.1
....................       delay_ms(500); 
0063:  MOVLW  02
0064:  MOVWF  31
0065:  MOVLW  FA
0066:  MOVWF  32
0067:  CALL   02F
0068:  DECFSZ 31,F
0069:  GOTO   065
....................       output_low(pin_led); 
006A:  BSF    03.5
006B:  BCF    06.1
006C:  BCF    03.5
006D:  BCF    06.1
....................       delay_ms(500); 
006E:  MOVLW  02
006F:  MOVWF  31
0070:  MOVLW  FA
0071:  MOVWF  32
0072:  CALL   02F
0073:  DECFSZ 31,F
0074:  GOTO   070
0075:  INCF   30,F
0076:  GOTO   05B
....................    }   
0077:  BCF    0B.1
0078:  BCF    0A.3
0079:  BCF    0A.4
007A:  GOTO   01B
.................... } 
....................  
.................... void start_f() 
.................... {   
....................    if(input(pin_start) && !input(pin_stop)) 
007B:  BSF    03.5
007C:  BSF    05.0
007D:  BCF    03.5
007E:  BTFSS  05.0
007F:  GOTO   088
0080:  BSF    03.5
0081:  BSF    05.1
0082:  BCF    03.5
0083:  BTFSC  05.1
0084:  GOTO   088
....................    { 
....................       start = 1; 
0085:  MOVLW  01
0086:  MOVWF  28
....................       stop = 0; 
0087:  CLRF   29
....................    } 
0088:  BCF    0A.3
0089:  BCF    0A.4
008A:  GOTO   0BA (RETURN)
.................... } 
....................  
.................... void stop_f() 
.................... {   
....................    if(!input(pin_start) && input(pin_stop)) 
008B:  BSF    03.5
008C:  BSF    05.0
008D:  BCF    03.5
008E:  BTFSC  05.0
008F:  GOTO   099
0090:  BSF    03.5
0091:  BSF    05.1
0092:  BCF    03.5
0093:  BTFSS  05.1
0094:  GOTO   099
....................    { 
....................       start = 0; 
0095:  CLRF   28
....................       stop = 1; 
0096:  MOVLW  01
0097:  MOVWF  29
....................       led = 0x01; 
0098:  MOVWF  2A
....................    } 
....................    if(stop == 1) 
0099:  DECFSZ 29,W
009A:  GOTO   09B
....................    break; 
009B:  RETURN
.................... } 
....................  
....................  
.................... void main() 
009C:  MOVF   03,W
009D:  ANDLW  1F
009E:  MOVWF  03
009F:  CLRF   29
00A0:  MOVLW  01
00A1:  MOVWF  2A
00A2:  BSF    03.5
00A3:  BSF    1F.0
00A4:  BSF    1F.1
00A5:  BSF    1F.2
00A6:  BCF    1F.3
00A7:  MOVLW  07
00A8:  MOVWF  1C
00A9:  BCF    03.7
.................... {   
....................    set_tris_a(0xFF);   
00AA:  MOVLW  FF
00AB:  MOVWF  05
....................    set_tris_b(0x01); 
00AC:  MOVLW  01
00AD:  MOVWF  06
....................    set_tris_d(0x00); 
00AE:  MOVLW  00
00AF:  MOVWF  08
....................    output_d(0x00); 
00B0:  CLRF   08
00B1:  BCF    03.5
00B2:  CLRF   08
....................     
....................    ext_int_edge(H_TO_L); 
00B3:  BSF    03.5
00B4:  BCF    01.6
....................    enable_interrupts(INT_EXT); 
00B5:  BCF    03.5
00B6:  BSF    0B.4
....................    enable_interrupts(GLOBAL); 
00B7:  MOVLW  C0
00B8:  IORWF  0B,F
....................     
....................     
....................    while(TRUE) 
....................    { 
....................       start_f(); 
00B9:  GOTO   07B
....................       stop_f(); 
00BA:  CALL   08B
....................        
....................       while(start == 1) 
00BB:  DECFSZ 28,W
00BC:  GOTO   106
....................       { 
....................          for(int i=0 ; i<7 ; i++) 
00BD:  CLRF   2B
00BE:  MOVF   2B,W
00BF:  SUBLW  06
00C0:  BTFSS  03.0
00C1:  GOTO   0DF
....................          {   
....................             output_d(led); 
00C2:  BSF    03.5
00C3:  CLRF   08
00C4:  BCF    03.5
00C5:  MOVF   2A,W
00C6:  MOVWF  08
....................             led = led << 1 ; 
00C7:  BCF    03.0
00C8:  RLF    2A,F
....................             for(int k = 0; k<20; k++) 
00C9:  CLRF   2C
00CA:  MOVF   2C,W
00CB:  SUBLW  13
00CC:  BTFSS  03.0
00CD:  GOTO   0DA
....................             { 
....................                stop_f(); 
00CE:  CALL   08B
00CF:  CLRF   27
00D0:  BTFSC  0B.7
00D1:  BSF    27.7
00D2:  BCF    0B.7
....................                delay_ms(5); 
00D3:  MOVLW  05
00D4:  MOVWF  32
00D5:  CALL   02F
00D6:  BTFSC  27.7
00D7:  BSF    0B.7
00D8:  INCF   2C,F
00D9:  GOTO   0CA
....................             } 
....................             if(stop == 1) 
00DA:  DECFSZ 29,W
00DB:  GOTO   0DD
....................             break; 
00DC:  GOTO   0DF
00DD:  INCF   2B,F
00DE:  GOTO   0BE
....................          } 
....................          if(stop == 1) 
00DF:  DECFSZ 29,W
00E0:  GOTO   0E2
....................          break; 
00E1:  GOTO   106
....................          stop_f(); 
00E2:  CALL   08B
....................          for(int y =0; y<7; y++) 
00E3:  CLRF   2D
00E4:  MOVF   2D,W
00E5:  SUBLW  06
00E6:  BTFSS  03.0
00E7:  GOTO   105
....................          { 
....................             output_d(led); 
00E8:  BSF    03.5
00E9:  CLRF   08
00EA:  BCF    03.5
00EB:  MOVF   2A,W
00EC:  MOVWF  08
....................             led = led >> 1 ; 
00ED:  BCF    03.0
00EE:  RRF    2A,F
....................             for(int k = 0; k<20; k++) 
00EF:  CLRF   2E
00F0:  MOVF   2E,W
00F1:  SUBLW  13
00F2:  BTFSS  03.0
00F3:  GOTO   100
....................             { 
....................                stop_f(); 
00F4:  CALL   08B
00F5:  CLRF   27
00F6:  BTFSC  0B.7
00F7:  BSF    27.7
00F8:  BCF    0B.7
....................                delay_ms(5);   
00F9:  MOVLW  05
00FA:  MOVWF  32
00FB:  CALL   02F
00FC:  BTFSC  27.7
00FD:  BSF    0B.7
00FE:  INCF   2E,F
00FF:  GOTO   0F0
....................             } 
....................             if(stop == 1) 
0100:  DECFSZ 29,W
0101:  GOTO   103
....................             break; 
0102:  GOTO   105
0103:  INCF   2D,F
0104:  GOTO   0E4
....................          } 
0105:  GOTO   0BB
....................           
....................       } 
0106:  GOTO   0B9
....................        
....................    } 
....................  
.................... } 
0107:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
