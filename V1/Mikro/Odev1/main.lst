CCS PCM C Compiler, Version 5.015, 5967               06-Mar-23 18:30

               Filename:   E:\mikro\Ödev1\main.lst

               ROM used:   171 words (2%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           9 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
....................  
.................... #fuses HS, NOWDT, NOPROTECT // Denetleyici konfigürasyon ayarlarý 
.................... #use delay(clock=4000000) // Gecikme fonksiyonu için kullanýlan 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  // osilatör frekansý belirtiliyor 
.................... #use fast_io(b) // Port yönlendirme komutlarý B portu için geçerli 
.................... int i=0; // integer "i" deðiþkeni tanýmlamasý 
....................  
.................... /*** ANA PROGRAM ***/ 
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  CLRF   20
001D:  MOVLW  FF
001E:  MOVWF  21
001F:  BSF    03.5
0020:  BSF    1F.0
0021:  BSF    1F.1
0022:  BSF    1F.2
0023:  BCF    1F.3
0024:  MOVLW  07
0025:  MOVWF  1C
0026:  BCF    03.7
.................... { 
.................... setup_adc_ports(NO_ANALOGS); 
0027:  BSF    1F.0
0028:  BSF    1F.1
0029:  BSF    1F.2
002A:  BCF    1F.3
.................... setup_adc(ADC_OFF); 
002B:  BCF    03.5
002C:  BCF    1F.0
.................... setup_psp(PSP_DISABLED); 
002D:  BSF    03.5
002E:  BCF    09.4
.................... setup_spi(SPI_SS_DISABLED); 
002F:  BCF    03.5
0030:  BCF    14.5
0031:  BCF    21.5
0032:  MOVF   21,W
0033:  BSF    03.5
0034:  MOVWF  07
0035:  BCF    03.5
0036:  BSF    21.4
0037:  MOVF   21,W
0038:  BSF    03.5
0039:  MOVWF  07
003A:  BCF    03.5
003B:  BCF    21.3
003C:  MOVF   21,W
003D:  BSF    03.5
003E:  MOVWF  07
003F:  MOVLW  01
0040:  BCF    03.5
0041:  MOVWF  14
0042:  MOVLW  00
0043:  BSF    03.5
0044:  MOVWF  14
.................... setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0045:  MOVF   01,W
0046:  ANDLW  C7
0047:  IORLW  08
0048:  MOVWF  01
.................... setup_timer_1(T1_DISABLED); 
0049:  BCF    03.5
004A:  CLRF   10
.................... setup_timer_2(T2_DISABLED,0,1); 
004B:  MOVLW  00
004C:  MOVWF  78
004D:  MOVWF  12
004E:  MOVLW  00
004F:  BSF    03.5
0050:  MOVWF  12
.................... set_tris_b(0x00); // B portunun tüm pinlerini çýkýþ olarak ayarla 
0051:  MOVWF  06
.................... output_b(0x00); // B portunun çýkýþlarýný temizle 
0052:  BCF    03.5
0053:  CLRF   06
....................  
....................  while(1) 
.................... { 
....................  output_b(0xFF);  
0054:  MOVLW  FF
0055:  MOVWF  06
....................  delay_ms(500);  
0056:  MOVLW  02
0057:  MOVWF  22
0058:  MOVLW  FA
0059:  MOVWF  23
005A:  CALL   004
005B:  DECFSZ 22,F
005C:  GOTO   058
....................  output_b(0x00);  
005D:  CLRF   06
....................  delay_ms(500);  
005E:  MOVLW  02
005F:  MOVWF  22
0060:  MOVLW  FA
0061:  MOVWF  23
0062:  CALL   004
0063:  DECFSZ 22,F
0064:  GOTO   060
....................  output_b(0x0F); 
0065:  MOVLW  0F
0066:  MOVWF  06
....................  delay_ms(500); 
0067:  MOVLW  02
0068:  MOVWF  22
0069:  MOVLW  FA
006A:  MOVWF  23
006B:  CALL   004
006C:  DECFSZ 22,F
006D:  GOTO   069
....................  output_b(0x00);  
006E:  CLRF   06
....................  delay_ms(500);  
006F:  MOVLW  02
0070:  MOVWF  22
0071:  MOVLW  FA
0072:  MOVWF  23
0073:  CALL   004
0074:  DECFSZ 22,F
0075:  GOTO   071
....................  output_b(0xF0);  
0076:  MOVLW  F0
0077:  MOVWF  06
....................  delay_ms(500);  
0078:  MOVLW  02
0079:  MOVWF  22
007A:  MOVLW  FA
007B:  MOVWF  23
007C:  CALL   004
007D:  DECFSZ 22,F
007E:  GOTO   07A
....................  output_b(0x00); 
007F:  CLRF   06
....................  delay_ms(500); 
0080:  MOVLW  02
0081:  MOVWF  22
0082:  MOVLW  FA
0083:  MOVWF  23
0084:  CALL   004
0085:  DECFSZ 22,F
0086:  GOTO   082
....................  output_b(0xAA); 
0087:  MOVLW  AA
0088:  MOVWF  06
....................  delay_ms(500); 
0089:  MOVLW  02
008A:  MOVWF  22
008B:  MOVLW  FA
008C:  MOVWF  23
008D:  CALL   004
008E:  DECFSZ 22,F
008F:  GOTO   08B
....................  output_b(0x00); 
0090:  CLRF   06
....................  delay_ms(500); 
0091:  MOVLW  02
0092:  MOVWF  22
0093:  MOVLW  FA
0094:  MOVWF  23
0095:  CALL   004
0096:  DECFSZ 22,F
0097:  GOTO   093
....................  output_b(0x55); 
0098:  MOVLW  55
0099:  MOVWF  06
....................  delay_ms(500); 
009A:  MOVLW  02
009B:  MOVWF  22
009C:  MOVLW  FA
009D:  MOVWF  23
009E:  CALL   004
009F:  DECFSZ 22,F
00A0:  GOTO   09C
....................  output_b(0x00); 
00A1:  CLRF   06
....................  delay_ms(500); 
00A2:  MOVLW  02
00A3:  MOVWF  22
00A4:  MOVLW  FA
00A5:  MOVWF  23
00A6:  CALL   004
00A7:  DECFSZ 22,F
00A8:  GOTO   0A4
00A9:  GOTO   054
.................... } 
.................... } 
00AA:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
