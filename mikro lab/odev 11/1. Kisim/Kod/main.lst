CCS PCM C Compiler, Version 5.015, 5967               25-May-23 01:27

               Filename:   E:\Okul\Mikro\mikro lab\odev 11\Kod\main.lst

               ROM used:   184 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           15 (4%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03C
0003:  NOP
.................... #include <16f877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  03
0009:  RETLW  06
000A:  RETLW  0C
000B:  RETLW  09
....................  
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPROTECT 
.................... #use delay(clock=4000000) 
*
0025:  MOVLW  29
0026:  MOVWF  04
0027:  BCF    03.7
0028:  MOVF   00,W
0029:  BTFSC  03.2
002A:  GOTO   039
002B:  MOVLW  01
002C:  MOVWF  78
002D:  CLRF   77
002E:  DECFSZ 77,F
002F:  GOTO   02E
0030:  DECFSZ 78,F
0031:  GOTO   02D
0032:  MOVLW  4A
0033:  MOVWF  77
0034:  DECFSZ 77,F
0035:  GOTO   034
0036:  GOTO   037
0037:  DECFSZ 00,F
0038:  GOTO   02B
....................  
.................... #define buton_1 pin_A0 
.................... #define buton_2 pin_A1 
....................  
.................... const int ileri_digit[4] = {0x03, 0x06 , 0x0C, 0x09}; 
.................... const int geri_digit[4]  = {0x09, 0x0C ,0x06 , 0x03}; 
.................... int k,i,y,j, adim=0; 
.................... int geri = 0; 
.................... int ileri = 0; 
....................  
.................... void buton() 
.................... { 
....................    if(input(buton_1)) //ileri butonu 
*
000C:  BSF    03.5
000D:  BSF    05.0
000E:  BCF    03.5
000F:  BTFSS  05.0
0010:  GOTO   014
....................    { 
....................       ileri = 1;  
0011:  MOVLW  01
0012:  MOVWF  26
....................       geri = 0; 
0013:  CLRF   25
....................    } 
....................     
....................    if(input(buton_2)) //ileri butonu 
0014:  BSF    03.5
0015:  BSF    05.1
0016:  BCF    03.5
0017:  BTFSS  05.1
0018:  GOTO   01C
....................    { 
....................       ileri = 0;  
0019:  CLRF   26
....................       geri = 1; 
001A:  MOVLW  01
001B:  MOVWF  25
....................    } 
001C:  RETURN
....................  
.................... } 
....................  
.................... void delay_buton() 
.................... { 
....................    for(int t=0; t<100; t++) 
001D:  CLRF   28
001E:  MOVF   28,W
001F:  SUBLW  63
0020:  BTFSS  03.0
0021:  GOTO   03B
....................    { 
....................       buton(); 
0022:  CALL   00C
....................       delay_ms(10); 
0023:  MOVLW  0A
0024:  MOVWF  29
*
0039:  INCF   28,F
003A:  GOTO   01E
....................    } 
003B:  RETURN
....................     
.................... } 
....................  
....................  
.................... void main() 
003C:  MOVF   03,W
003D:  ANDLW  1F
003E:  MOVWF  03
003F:  CLRF   24
0040:  CLRF   25
0041:  CLRF   26
0042:  MOVLW  FF
0043:  MOVWF  27
0044:  BSF    03.5
0045:  BSF    1F.0
0046:  BSF    1F.1
0047:  BSF    1F.2
0048:  BCF    1F.3
0049:  MOVLW  07
004A:  MOVWF  1C
004B:  BCF    03.7
.................... { 
....................    set_tris_a(0xff); 
004C:  MOVLW  FF
004D:  MOVWF  05
....................    set_tris_c(0x00);  
004E:  MOVLW  00
004F:  MOVWF  07
0050:  BCF    03.5
0051:  MOVWF  27
....................    output_c(0x00);  
0052:  MOVWF  27
0053:  BSF    03.5
0054:  CLRF   07
0055:  BCF    03.5
0056:  CLRF   07
....................     
.................... while(1) 
.................... {  
....................    buton(); 
0057:  CALL   00C
....................     
....................    while(ileri == 1 && geri == 0)  
0058:  DECFSZ 26,W
0059:  GOTO   086
005A:  MOVF   25,F
005B:  BTFSS  03.2
005C:  GOTO   086
....................    { 
....................       for(i=0; i<2; i++) 
005D:  CLRF   21
005E:  MOVF   21,W
005F:  SUBLW  01
0060:  BTFSS  03.0
0061:  GOTO   084
....................       { 
....................          for(k=0; k<4; k++)  //90 derece oldugundan 4 kere donmeli 
0062:  CLRF   20
0063:  MOVF   20,W
0064:  SUBLW  03
0065:  BTFSS  03.0
0066:  GOTO   07D
....................          { 
....................             adim = (adim+1)%4; 
0067:  MOVLW  01
0068:  ADDWF  24,W
0069:  ANDLW  03
006A:  MOVWF  24
....................             output_c(ileri_digit[adim]); 
006B:  MOVF   24,W
006C:  CALL   004
006D:  MOVWF  28
006E:  MOVLW  00
006F:  MOVWF  27
0070:  BSF    03.5
0071:  CLRF   07
0072:  BCF    03.5
0073:  MOVF   28,W
0074:  MOVWF  07
....................              
....................             delay_buton(); 
0075:  CALL   01D
....................             if(geri == 1 && ileri == 0) 
0076:  DECFSZ 25,W
0077:  GOTO   07B
0078:  MOVF   26,F
0079:  BTFSC  03.2
....................             { 
....................             break; 
007A:  GOTO   07D
....................             } 
007B:  INCF   20,F
007C:  GOTO   063
....................          } 
....................           
....................          if(geri == 1 && ileri == 0) 
007D:  DECFSZ 25,W
007E:  GOTO   082
007F:  MOVF   26,F
0080:  BTFSC  03.2
....................          break; 
0081:  GOTO   084
0082:  INCF   21,F
0083:  GOTO   05E
....................       } 
....................       ileri = 0; 
0084:  CLRF   26
0085:  GOTO   058
....................    } 
....................     
....................     while(ileri == 0 && geri == 1) 
0086:  MOVF   26,F
0087:  BTFSS  03.2
0088:  GOTO   0B6
0089:  DECFSZ 25,W
008A:  GOTO   0B6
....................    { 
....................       for(y=0; y<2; y++) 
008B:  CLRF   22
008C:  MOVF   22,W
008D:  SUBLW  01
008E:  BTFSS  03.0
008F:  GOTO   0B4
....................       { 
....................          for(j=0; j<4; j++)  //90 derece oldugundan 4 kere donmeli 
0090:  CLRF   23
0091:  MOVF   23,W
0092:  SUBLW  03
0093:  BTFSS  03.0
0094:  GOTO   0AC
....................          { 
....................             adim = (adim-1)%4; 
0095:  MOVLW  01
0096:  SUBWF  24,W
0097:  ANDLW  03
0098:  MOVWF  24
....................             output_c(ileri_digit[adim]); 
0099:  MOVF   24,W
009A:  CALL   004
009B:  MOVWF  28
009C:  MOVLW  00
009D:  MOVWF  27
009E:  BSF    03.5
009F:  CLRF   07
00A0:  BCF    03.5
00A1:  MOVF   28,W
00A2:  MOVWF  07
....................              
....................             delay_buton(); 
00A3:  CALL   01D
....................             if(geri == 0 && ileri == 1) 
00A4:  MOVF   25,F
00A5:  BTFSS  03.2
00A6:  GOTO   0AA
00A7:  DECFSZ 26,W
00A8:  GOTO   0AA
....................             { 
....................            
....................             break; 
00A9:  GOTO   0AC
....................             } 
00AA:  INCF   23,F
00AB:  GOTO   091
....................          } 
....................          if(geri == 0 && ileri == 1) 
00AC:  MOVF   25,F
00AD:  BTFSS  03.2
00AE:  GOTO   0B2
00AF:  DECFSZ 26,W
00B0:  GOTO   0B2
....................          break; 
00B1:  GOTO   0B4
00B2:  INCF   22,F
00B3:  GOTO   08C
....................       } 
....................       geri = 0; 
00B4:  CLRF   25
00B5:  GOTO   086
....................    } 
00B6:  GOTO   057
....................     
....................   
.................... } 
....................  
.................... } 
....................  
00B7:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
