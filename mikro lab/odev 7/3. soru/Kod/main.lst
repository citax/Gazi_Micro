CCS PCM C Compiler, Version 5.015, 5967               19-Nis-23 23:25

               Filename:   E:\Okul\Mikro\mikro lab\odev 7\3. soru\Kod\main.lst

               ROM used:   104 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           13 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03E
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.1
001A:  GOTO   01D
001B:  BTFSC  0C.1
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPROTECT  
.................... #use delay(clock=4000000) 
.................... unsigned int kesme =0; 
....................  
.................... #int_timer2 
.................... void timer2_kesme() 
.................... { 
.................... kesme++; 
0031:  INCF   27,F
.................... output_high(pin_d0); 
0032:  BSF    03.5
0033:  BCF    08.0
0034:  BCF    03.5
0035:  BSF    08.0
.................... output_low(pin_d0); 
0036:  BSF    03.5
0037:  BCF    08.0
0038:  BCF    03.5
0039:  BCF    08.0
003A:  BCF    0C.1
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   01D
.................... } 
....................  
.................... void main() 
003E:  MOVF   03,W
003F:  ANDLW  1F
0040:  MOVWF  03
0041:  CLRF   27
0042:  BSF    03.5
0043:  BSF    1F.0
0044:  BSF    1F.1
0045:  BSF    1F.2
0046:  BCF    1F.3
0047:  MOVLW  07
0048:  MOVWF  1C
0049:  BCF    03.7
.................... {   
....................    set_tris_a(0x01);   
004A:  MOVLW  01
004B:  MOVWF  05
....................    set_tris_d(0x00); 
004C:  MOVLW  00
004D:  MOVWF  08
....................    output_d(0x00); 
004E:  CLRF   08
004F:  BCF    03.5
0050:  CLRF   08
....................     
....................    setup_timer_2(T2_DIV_BY_16,250,16); 
0051:  MOVLW  78
0052:  MOVWF  78
0053:  IORLW  06
0054:  MOVWF  12
0055:  MOVLW  FA
0056:  BSF    03.5
0057:  MOVWF  12
....................    enable_interrupts(int_timer2); 
0058:  BSF    0C.1
....................    enable_interrupts(global); 
0059:  MOVLW  C0
005A:  BCF    03.5
005B:  IORWF  0B,F
....................     
....................    while(TRUE) 
....................    { 
....................          if(input(pin_a0)) 
005C:  BSF    03.5
005D:  BSF    05.0
005E:  BCF    03.5
005F:  BTFSS  05.0
0060:  GOTO   066
....................          output_d(kesme); 
0061:  BSF    03.5
0062:  CLRF   08
0063:  BCF    03.5
0064:  MOVF   27,W
0065:  MOVWF  08
0066:  GOTO   05C
....................        
....................    } 
.................... } 
....................  
0067:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
