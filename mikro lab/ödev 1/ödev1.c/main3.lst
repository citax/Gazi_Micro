CCS PCM C Compiler, Version 5.015, 5967               08-Mar-23 16:16

               Filename:   E:\mikro lab\ödev1\ödev1.c\main3.lst

               ROM used:   371 words (5%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           10 (3%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <main3.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
....................  
.................... #fuses HS,NOWDT,NOPROTECT 
.................... #use delay(clock=4000000) 
0004:  MOVLW  24
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #use fast_io(b) 
.................... int i; 
.................... int a; 
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  MOVLW  FF
001D:  MOVWF  22
001E:  BSF    03.5
001F:  BSF    1F.0
0020:  BSF    1F.1
0021:  BSF    1F.2
0022:  BCF    1F.3
0023:  MOVLW  07
0024:  MOVWF  1C
0025:  BCF    03.7
.................... { 
....................  
....................  setup_adc_ports(NO_ANALOGS); 
0026:  BSF    1F.0
0027:  BSF    1F.1
0028:  BSF    1F.2
0029:  BCF    1F.3
....................  setup_adc(ADC_OFF); 
002A:  BCF    03.5
002B:  BCF    1F.0
....................  setup_psp(PSP_DISABLED); 
002C:  BSF    03.5
002D:  BCF    09.4
....................  setup_spi(SPI_SS_DISABLED); 
002E:  BCF    03.5
002F:  BCF    14.5
0030:  BCF    22.5
0031:  MOVF   22,W
0032:  BSF    03.5
0033:  MOVWF  07
0034:  BCF    03.5
0035:  BSF    22.4
0036:  MOVF   22,W
0037:  BSF    03.5
0038:  MOVWF  07
0039:  BCF    03.5
003A:  BCF    22.3
003B:  MOVF   22,W
003C:  BSF    03.5
003D:  MOVWF  07
003E:  MOVLW  01
003F:  BCF    03.5
0040:  MOVWF  14
0041:  MOVLW  00
0042:  BSF    03.5
0043:  MOVWF  14
....................  setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0044:  MOVF   01,W
0045:  ANDLW  C7
0046:  IORLW  08
0047:  MOVWF  01
....................  setup_timer_1(T1_DISABLED); 
0048:  BCF    03.5
0049:  CLRF   10
....................  setup_timer_2(T2_DISABLED,0,1); 
004A:  MOVLW  00
004B:  MOVWF  78
004C:  MOVWF  12
004D:  MOVLW  00
004E:  BSF    03.5
004F:  MOVWF  12
....................  
....................   
....................  set_tris_b(0x00);  
0050:  MOVWF  06
....................  output_b(0x00); 
0051:  BCF    03.5
0052:  CLRF   06
....................   
....................    while(TRUE) 
....................    { 
....................   for(i=0; i<15; i++) 
0053:  CLRF   20
0054:  MOVF   20,W
0055:  SUBLW  0E
0056:  BTFSS  03.0
0057:  GOTO   0E2
....................   { 
....................  
....................    output_b(0x01); 
0058:  MOVLW  01
0059:  MOVWF  06
....................    delay_ms(500); 
005A:  MOVLW  02
005B:  MOVWF  23
005C:  MOVLW  FA
005D:  MOVWF  24
005E:  CALL   004
005F:  DECFSZ 23,F
0060:  GOTO   05C
....................    output_b(0x00);  
0061:  CLRF   06
....................    delay_ms(500);  
0062:  MOVLW  02
0063:  MOVWF  23
0064:  MOVLW  FA
0065:  MOVWF  24
0066:  CALL   004
0067:  DECFSZ 23,F
0068:  GOTO   064
....................    output_b(0x03);  
0069:  MOVLW  03
006A:  MOVWF  06
....................    delay_ms(500);  
006B:  MOVLW  02
006C:  MOVWF  23
006D:  MOVLW  FA
006E:  MOVWF  24
006F:  CALL   004
0070:  DECFSZ 23,F
0071:  GOTO   06D
....................    output_b(0x00); 
0072:  CLRF   06
....................    delay_ms(500); 
0073:  MOVLW  02
0074:  MOVWF  23
0075:  MOVLW  FA
0076:  MOVWF  24
0077:  CALL   004
0078:  DECFSZ 23,F
0079:  GOTO   075
....................    output_b(0x07); 
007A:  MOVLW  07
007B:  MOVWF  06
....................    delay_ms(500); 
007C:  MOVLW  02
007D:  MOVWF  23
007E:  MOVLW  FA
007F:  MOVWF  24
0080:  CALL   004
0081:  DECFSZ 23,F
0082:  GOTO   07E
....................    output_b(0x00);  
0083:  CLRF   06
....................    delay_ms(500);  
0084:  MOVLW  02
0085:  MOVWF  23
0086:  MOVLW  FA
0087:  MOVWF  24
0088:  CALL   004
0089:  DECFSZ 23,F
008A:  GOTO   086
....................    output_b(0x0F);  
008B:  MOVLW  0F
008C:  MOVWF  06
....................    delay_ms(500);  
008D:  MOVLW  02
008E:  MOVWF  23
008F:  MOVLW  FA
0090:  MOVWF  24
0091:  CALL   004
0092:  DECFSZ 23,F
0093:  GOTO   08F
....................    output_b(0x00); 
0094:  CLRF   06
....................    delay_ms(500); 
0095:  MOVLW  02
0096:  MOVWF  23
0097:  MOVLW  FA
0098:  MOVWF  24
0099:  CALL   004
009A:  DECFSZ 23,F
009B:  GOTO   097
....................    output_b(0x1F); 
009C:  MOVLW  1F
009D:  MOVWF  06
....................    delay_ms(500); 
009E:  MOVLW  02
009F:  MOVWF  23
00A0:  MOVLW  FA
00A1:  MOVWF  24
00A2:  CALL   004
00A3:  DECFSZ 23,F
00A4:  GOTO   0A0
....................    output_b(0x00);  
00A5:  CLRF   06
....................    delay_ms(500);  
00A6:  MOVLW  02
00A7:  MOVWF  23
00A8:  MOVLW  FA
00A9:  MOVWF  24
00AA:  CALL   004
00AB:  DECFSZ 23,F
00AC:  GOTO   0A8
....................    output_b(0x3F);  
00AD:  MOVLW  3F
00AE:  MOVWF  06
....................    delay_ms(500);  
00AF:  MOVLW  02
00B0:  MOVWF  23
00B1:  MOVLW  FA
00B2:  MOVWF  24
00B3:  CALL   004
00B4:  DECFSZ 23,F
00B5:  GOTO   0B1
....................    output_b(0x00); 
00B6:  CLRF   06
....................    delay_ms(500); 
00B7:  MOVLW  02
00B8:  MOVWF  23
00B9:  MOVLW  FA
00BA:  MOVWF  24
00BB:  CALL   004
00BC:  DECFSZ 23,F
00BD:  GOTO   0B9
....................    output_b(0x7F); 
00BE:  MOVLW  7F
00BF:  MOVWF  06
....................    delay_ms(500); 
00C0:  MOVLW  02
00C1:  MOVWF  23
00C2:  MOVLW  FA
00C3:  MOVWF  24
00C4:  CALL   004
00C5:  DECFSZ 23,F
00C6:  GOTO   0C2
....................    output_b(0x00);  
00C7:  CLRF   06
....................    delay_ms(500);  
00C8:  MOVLW  02
00C9:  MOVWF  23
00CA:  MOVLW  FA
00CB:  MOVWF  24
00CC:  CALL   004
00CD:  DECFSZ 23,F
00CE:  GOTO   0CA
....................    output_b(0xFF);  
00CF:  MOVLW  FF
00D0:  MOVWF  06
....................    delay_ms(500);  
00D1:  MOVLW  02
00D2:  MOVWF  23
00D3:  MOVLW  FA
00D4:  MOVWF  24
00D5:  CALL   004
00D6:  DECFSZ 23,F
00D7:  GOTO   0D3
....................    output_b(0x00); 
00D8:  CLRF   06
....................    delay_ms(500); 
00D9:  MOVLW  02
00DA:  MOVWF  23
00DB:  MOVLW  FA
00DC:  MOVWF  24
00DD:  CALL   004
00DE:  DECFSZ 23,F
00DF:  GOTO   0DB
00E0:  INCF   20,F
00E1:  GOTO   054
....................   } 
....................  
....................   for(a=0; a<15; a++) 
00E2:  CLRF   21
00E3:  MOVF   21,W
00E4:  SUBLW  0E
00E5:  BTFSS  03.0
00E6:  GOTO   171
....................   { 
....................    output_b(0x80); 
00E7:  MOVLW  80
00E8:  MOVWF  06
....................    delay_ms(500); 
00E9:  MOVLW  02
00EA:  MOVWF  23
00EB:  MOVLW  FA
00EC:  MOVWF  24
00ED:  CALL   004
00EE:  DECFSZ 23,F
00EF:  GOTO   0EB
....................    output_b(0x00);  
00F0:  CLRF   06
....................    delay_ms(500);  
00F1:  MOVLW  02
00F2:  MOVWF  23
00F3:  MOVLW  FA
00F4:  MOVWF  24
00F5:  CALL   004
00F6:  DECFSZ 23,F
00F7:  GOTO   0F3
....................    output_b(0xC0);  
00F8:  MOVLW  C0
00F9:  MOVWF  06
....................    delay_ms(500);  
00FA:  MOVLW  02
00FB:  MOVWF  23
00FC:  MOVLW  FA
00FD:  MOVWF  24
00FE:  CALL   004
00FF:  DECFSZ 23,F
0100:  GOTO   0FC
....................    output_b(0x00); 
0101:  CLRF   06
....................    delay_ms(500); 
0102:  MOVLW  02
0103:  MOVWF  23
0104:  MOVLW  FA
0105:  MOVWF  24
0106:  CALL   004
0107:  DECFSZ 23,F
0108:  GOTO   104
....................    output_b(0xE0); 
0109:  MOVLW  E0
010A:  MOVWF  06
....................    delay_ms(500); 
010B:  MOVLW  02
010C:  MOVWF  23
010D:  MOVLW  FA
010E:  MOVWF  24
010F:  CALL   004
0110:  DECFSZ 23,F
0111:  GOTO   10D
....................    output_b(0x00);  
0112:  CLRF   06
....................    delay_ms(500);  
0113:  MOVLW  02
0114:  MOVWF  23
0115:  MOVLW  FA
0116:  MOVWF  24
0117:  CALL   004
0118:  DECFSZ 23,F
0119:  GOTO   115
....................    output_b(0xF0); 
011A:  MOVLW  F0
011B:  MOVWF  06
....................    delay_ms(500);  
011C:  MOVLW  02
011D:  MOVWF  23
011E:  MOVLW  FA
011F:  MOVWF  24
0120:  CALL   004
0121:  DECFSZ 23,F
0122:  GOTO   11E
....................    output_b(0x00); 
0123:  CLRF   06
....................    delay_ms(500); 
0124:  MOVLW  02
0125:  MOVWF  23
0126:  MOVLW  FA
0127:  MOVWF  24
0128:  CALL   004
0129:  DECFSZ 23,F
012A:  GOTO   126
....................    output_b(0xF8); 
012B:  MOVLW  F8
012C:  MOVWF  06
....................    delay_ms(500); 
012D:  MOVLW  02
012E:  MOVWF  23
012F:  MOVLW  FA
0130:  MOVWF  24
0131:  CALL   004
0132:  DECFSZ 23,F
0133:  GOTO   12F
....................    output_b(0x00);  
0134:  CLRF   06
....................    delay_ms(500);  
0135:  MOVLW  02
0136:  MOVWF  23
0137:  MOVLW  FA
0138:  MOVWF  24
0139:  CALL   004
013A:  DECFSZ 23,F
013B:  GOTO   137
....................    output_b(0xFC);  
013C:  MOVLW  FC
013D:  MOVWF  06
....................    delay_ms(500);  
013E:  MOVLW  02
013F:  MOVWF  23
0140:  MOVLW  FA
0141:  MOVWF  24
0142:  CALL   004
0143:  DECFSZ 23,F
0144:  GOTO   140
....................    output_b(0x00); 
0145:  CLRF   06
....................    delay_ms(500); 
0146:  MOVLW  02
0147:  MOVWF  23
0148:  MOVLW  FA
0149:  MOVWF  24
014A:  CALL   004
014B:  DECFSZ 23,F
014C:  GOTO   148
....................    output_b(0xFE); 
014D:  MOVLW  FE
014E:  MOVWF  06
....................    delay_ms(500); 
014F:  MOVLW  02
0150:  MOVWF  23
0151:  MOVLW  FA
0152:  MOVWF  24
0153:  CALL   004
0154:  DECFSZ 23,F
0155:  GOTO   151
....................    output_b(0x00);  
0156:  CLRF   06
....................    delay_ms(500);  
0157:  MOVLW  02
0158:  MOVWF  23
0159:  MOVLW  FA
015A:  MOVWF  24
015B:  CALL   004
015C:  DECFSZ 23,F
015D:  GOTO   159
....................    output_b(0xFF);  
015E:  MOVLW  FF
015F:  MOVWF  06
....................    delay_ms(500);  
0160:  MOVLW  02
0161:  MOVWF  23
0162:  MOVLW  FA
0163:  MOVWF  24
0164:  CALL   004
0165:  DECFSZ 23,F
0166:  GOTO   162
....................    output_b(0x00); 
0167:  CLRF   06
....................    delay_ms(500); 
0168:  MOVLW  02
0169:  MOVWF  23
016A:  MOVLW  FA
016B:  MOVWF  24
016C:  CALL   004
016D:  DECFSZ 23,F
016E:  GOTO   16A
016F:  INCF   21,F
0170:  GOTO   0E3
....................  
....................   } 
0171:  GOTO   053
....................    } 
....................  
.................... } 
0172:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
