CCS PCM C Compiler, Version 5.015, 5967               15-Mar-23 21:23

               Filename:   C:\Users\edaoz\Desktop\mikrolab\2.deney\2.soru\2.soru.lst

               ROM used:   242 words (3%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <2.soru.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #fuses XT, NOWDT, NOPROTECT 
.................... #use delay(clock=4000000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #define buton1 pin_A0 
.................... #define buton2 pin_A1 
.................... #define stop pin_A2 
.................... int a; 
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... { 
....................  
.................... set_tris_a(0xFF); 
0024:  MOVLW  FF
0025:  MOVWF  05
.................... set_tris_b(0x00); 
0026:  MOVLW  00
0027:  MOVWF  06
.................... output_b(0x00); 
0028:  CLRF   06
0029:  BCF    03.5
002A:  CLRF   06
....................  
....................  
.................... while(1) 
.................... { 
....................  
....................   if(input(buton1)) 
002B:  BSF    03.5
002C:  BSF    05.0
002D:  BCF    03.5
002E:  BTFSS  05.0
002F:  GOTO   08E
....................    { 
....................     delay_ms(15); 
0030:  MOVLW  0F
0031:  MOVWF  22
0032:  CALL   004
....................          if(input(stop)) 
0033:  BSF    03.5
0034:  BSF    05.2
0035:  BCF    03.5
0036:  BTFSS  05.2
0037:  GOTO   03D
....................            { 
....................              output_b(0x00); 
0038:  BSF    03.5
0039:  CLRF   06
003A:  BCF    03.5
003B:  CLRF   06
....................              break; 
003C:  GOTO   0F1
....................            } 
....................             
....................      for(a=0;a<5;a++) 
003D:  CLRF   20
003E:  MOVF   20,W
003F:  SUBLW  04
0040:  BTFSS  03.0
0041:  GOTO   08D
....................       { 
....................          
....................            if(input(stop)) 
0042:  BSF    03.5
0043:  BSF    05.2
0044:  BCF    03.5
0045:  BTFSS  05.2
0046:  GOTO   04C
....................            { 
....................              output_b(0x00); 
0047:  BSF    03.5
0048:  CLRF   06
0049:  BCF    03.5
004A:  CLRF   06
....................              break; 
004B:  GOTO   08D
....................            } 
....................             
....................        output_b(0xFF); 
004C:  BSF    03.5
004D:  CLRF   06
004E:  MOVLW  FF
004F:  BCF    03.5
0050:  MOVWF  06
....................              
....................           if(input(stop)) 
0051:  BSF    03.5
0052:  BSF    05.2
0053:  BCF    03.5
0054:  BTFSS  05.2
0055:  GOTO   05B
....................             { 
....................               output_b(0x00); 
0056:  BSF    03.5
0057:  CLRF   06
0058:  BCF    03.5
0059:  CLRF   06
....................               break; 
005A:  GOTO   08D
....................             } 
....................             
....................        delay_ms(500); 
005B:  MOVLW  02
005C:  MOVWF  21
005D:  MOVLW  FA
005E:  MOVWF  22
005F:  CALL   004
0060:  DECFSZ 21,F
0061:  GOTO   05D
....................                  
....................            if(input(stop)) 
0062:  BSF    03.5
0063:  BSF    05.2
0064:  BCF    03.5
0065:  BTFSS  05.2
0066:  GOTO   06C
....................              { 
....................                output_b(0x00); 
0067:  BSF    03.5
0068:  CLRF   06
0069:  BCF    03.5
006A:  CLRF   06
....................                break; 
006B:  GOTO   08D
....................              } 
....................                     
....................        output_b(0x00); 
006C:  BSF    03.5
006D:  CLRF   06
006E:  BCF    03.5
006F:  CLRF   06
....................                  
....................             if(input(stop)) 
0070:  BSF    03.5
0071:  BSF    05.2
0072:  BCF    03.5
0073:  BTFSS  05.2
0074:  GOTO   07A
....................               { 
....................                 output_b(0x00); 
0075:  BSF    03.5
0076:  CLRF   06
0077:  BCF    03.5
0078:  CLRF   06
....................                 break; 
0079:  GOTO   08D
....................               } 
....................                     
....................        delay_ms(500); 
007A:  MOVLW  02
007B:  MOVWF  21
007C:  MOVLW  FA
007D:  MOVWF  22
007E:  CALL   004
007F:  DECFSZ 21,F
0080:  GOTO   07C
....................                 
....................              if(input(stop)) 
0081:  BSF    03.5
0082:  BSF    05.2
0083:  BCF    03.5
0084:  BTFSS  05.2
0085:  GOTO   08B
....................               { 
....................                 output_b(0x00); 
0086:  BSF    03.5
0087:  CLRF   06
0088:  BCF    03.5
0089:  CLRF   06
....................                 break; 
008A:  GOTO   08D
....................               } 
008B:  INCF   20,F
008C:  GOTO   03E
....................       } 
....................              
....................    } 
008D:  GOTO   0F0
....................       
....................   else if(input(buton2)) 
008E:  BSF    03.5
008F:  BSF    05.1
0090:  BCF    03.5
0091:  BTFSS  05.1
0092:  GOTO   0F0
....................    { 
....................        delay_ms(15); 
0093:  MOVLW  0F
0094:  MOVWF  22
0095:  CALL   004
....................         
....................               if(input(stop)) 
0096:  BSF    03.5
0097:  BSF    05.2
0098:  BCF    03.5
0099:  BTFSS  05.2
009A:  GOTO   0A0
....................                 { 
....................                   output_b(0x00); 
009B:  BSF    03.5
009C:  CLRF   06
009D:  BCF    03.5
009E:  CLRF   06
....................                   break; 
009F:  GOTO   0F1
....................                 } 
....................     for(a=0;a<10;a++) 
00A0:  CLRF   20
00A1:  MOVF   20,W
00A2:  SUBLW  09
00A3:  BTFSS  03.0
00A4:  GOTO   0F0
....................       { 
....................          
....................               if(input(stop)) 
00A5:  BSF    03.5
00A6:  BSF    05.2
00A7:  BCF    03.5
00A8:  BTFSS  05.2
00A9:  GOTO   0AF
....................                 { 
....................                   output_b(0x00); 
00AA:  BSF    03.5
00AB:  CLRF   06
00AC:  BCF    03.5
00AD:  CLRF   06
....................                   break; 
00AE:  GOTO   0F0
....................                 } 
....................             
....................        output_b(0xFF); 
00AF:  BSF    03.5
00B0:  CLRF   06
00B1:  MOVLW  FF
00B2:  BCF    03.5
00B3:  MOVWF  06
....................             
....................               if(input(stop)) 
00B4:  BSF    03.5
00B5:  BSF    05.2
00B6:  BCF    03.5
00B7:  BTFSS  05.2
00B8:  GOTO   0BE
....................                 { 
....................                   output_b(0x00); 
00B9:  BSF    03.5
00BA:  CLRF   06
00BB:  BCF    03.5
00BC:  CLRF   06
....................                   break; 
00BD:  GOTO   0F0
....................                 } 
....................             
....................        delay_ms(500); 
00BE:  MOVLW  02
00BF:  MOVWF  21
00C0:  MOVLW  FA
00C1:  MOVWF  22
00C2:  CALL   004
00C3:  DECFSZ 21,F
00C4:  GOTO   0C0
....................                 
....................                if(input(stop)) 
00C5:  BSF    03.5
00C6:  BSF    05.2
00C7:  BCF    03.5
00C8:  BTFSS  05.2
00C9:  GOTO   0CF
....................                  { 
....................                    output_b(0x00); 
00CA:  BSF    03.5
00CB:  CLRF   06
00CC:  BCF    03.5
00CD:  CLRF   06
....................                    break; 
00CE:  GOTO   0F0
....................                  } 
....................                     
....................        output_b(0x00); 
00CF:  BSF    03.5
00D0:  CLRF   06
00D1:  BCF    03.5
00D2:  CLRF   06
....................                 
....................                if(input(stop)) 
00D3:  BSF    03.5
00D4:  BSF    05.2
00D5:  BCF    03.5
00D6:  BTFSS  05.2
00D7:  GOTO   0DD
....................                  { 
....................                    output_b(0x00); 
00D8:  BSF    03.5
00D9:  CLRF   06
00DA:  BCF    03.5
00DB:  CLRF   06
....................                    break; 
00DC:  GOTO   0F0
....................                  } 
....................                     
....................       delay_ms(500); 
00DD:  MOVLW  02
00DE:  MOVWF  21
00DF:  MOVLW  FA
00E0:  MOVWF  22
00E1:  CALL   004
00E2:  DECFSZ 21,F
00E3:  GOTO   0DF
....................                 
....................                if(input(stop)) 
00E4:  BSF    03.5
00E5:  BSF    05.2
00E6:  BCF    03.5
00E7:  BTFSS  05.2
00E8:  GOTO   0EE
....................                  { 
....................                    output_b(0x00); 
00E9:  BSF    03.5
00EA:  CLRF   06
00EB:  BCF    03.5
00EC:  CLRF   06
....................                    break; 
00ED:  GOTO   0F0
....................                  } 
00EE:  INCF   20,F
00EF:  GOTO   0A1
....................       } 
....................             
....................    } 
00F0:  GOTO   02B
....................          
.................... } 
.................... } 
00F1:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
