CCS PCM C Compiler, Version 5.015, 5967               29-Mar-23 21:55

               Filename:   E:\Okul\Mikro\mikro lab\odev 4\0'dan 9'a butonla sayan\Kod\CITAK.lst

               ROM used:   137 words (2%)
                           Largest free fragment is 2048
               RAM used:   20 (5%) at main() level
                           20 (5%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <CITAK.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPROTECT  
.................... #use delay(clock=4000000) 
....................  
.................... #define pin_plus pin_A0 
.................... #define pin_minus pin_A1 
.................... #define pin_stop  pin_A2 
.................... int segment[10] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7C, 0x07, 0x7F, 0x6F}; 
*
0012:  MOVLW  3F
0013:  BCF    03.5
0014:  MOVWF  20
0015:  MOVLW  06
0016:  MOVWF  21
0017:  MOVLW  5B
0018:  MOVWF  22
0019:  MOVLW  4F
001A:  MOVWF  23
001B:  MOVLW  66
001C:  MOVWF  24
001D:  MOVLW  6D
001E:  MOVWF  25
001F:  MOVLW  7C
0020:  MOVWF  26
0021:  MOVLW  07
0022:  MOVWF  27
0023:  MOVLW  7F
0024:  MOVWF  28
0025:  MOVLW  6F
0026:  MOVWF  29
.................... int number,a,b = 0; 
....................  
.................... void main() 
*
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  CLRF   2C
0008:  MOVLW  FF
0009:  MOVWF  2D
000A:  BSF    03.5
000B:  BSF    1F.0
000C:  BSF    1F.1
000D:  BSF    1F.2
000E:  BCF    1F.3
000F:  MOVLW  07
0010:  MOVWF  1C
0011:  BCF    03.7
.................... {   
....................    set_tris_a(0xFF); 
*
0027:  MOVLW  FF
0028:  BSF    03.5
0029:  MOVWF  05
....................    set_tris_b(0x00); 
002A:  MOVLW  00
002B:  MOVWF  06
....................    set_tris_c(0x00); 
002C:  MOVWF  07
002D:  BCF    03.5
002E:  MOVWF  2D
....................    output_b(0x3F); 
002F:  BSF    03.5
0030:  CLRF   06
0031:  MOVLW  3F
0032:  BCF    03.5
0033:  MOVWF  06
....................    output_c(0x01); 
0034:  MOVLW  00
0035:  MOVWF  2D
0036:  BSF    03.5
0037:  CLRF   07
0038:  MOVLW  01
0039:  BCF    03.5
003A:  MOVWF  07
....................    while(TRUE) 
....................    { 
....................       if(input(pin_plus)) 
003B:  BSF    03.5
003C:  BSF    05.0
003D:  BCF    03.5
003E:  BTFSS  05.0
003F:  GOTO   055
....................       {   
....................          number++; 
0040:  INCF   2A,F
....................          if(number==10) 
0041:  MOVF   2A,W
0042:  SUBLW  0A
0043:  BTFSC  03.2
....................          number=0; 
0044:  CLRF   2A
....................          output_b(segment[number]); 
0045:  MOVLW  20
0046:  ADDWF  2A,W
0047:  MOVWF  04
0048:  BCF    03.7
0049:  MOVF   00,W
004A:  MOVWF  2E
004B:  BSF    03.5
004C:  CLRF   06
004D:  BCF    03.5
004E:  MOVF   2E,W
004F:  MOVWF  06
....................          while(input(pin_plus)); 
0050:  BSF    03.5
0051:  BSF    05.0
0052:  BCF    03.5
0053:  BTFSC  05.0
0054:  GOTO   050
....................        
....................       } 
....................        
....................       if(input(pin_stop)) 
0055:  BSF    03.5
0056:  BSF    05.2
0057:  BCF    03.5
0058:  BTFSS  05.2
0059:  GOTO   06B
....................       { 
....................          number=0; 
005A:  CLRF   2A
....................          output_b(segment[number]); 
005B:  MOVLW  20
005C:  ADDWF  2A,W
005D:  MOVWF  04
005E:  BCF    03.7
005F:  MOVF   00,W
0060:  MOVWF  2E
0061:  BSF    03.5
0062:  CLRF   06
0063:  BCF    03.5
0064:  MOVF   2E,W
0065:  MOVWF  06
....................          while(input(pin_stop)); 
0066:  BSF    03.5
0067:  BSF    05.2
0068:  BCF    03.5
0069:  BTFSC  05.2
006A:  GOTO   066
....................       } 
....................        
....................       if(input(pin_minus)) 
006B:  BSF    03.5
006C:  BSF    05.1
006D:  BCF    03.5
006E:  BTFSS  05.1
006F:  GOTO   087
....................       {   
....................          number--; 
0070:  DECF   2A,F
....................          if(number==-1) 
0071:  MOVF   2A,W
0072:  SUBLW  FF
0073:  BTFSS  03.2
0074:  GOTO   077
....................          number=9; 
0075:  MOVLW  09
0076:  MOVWF  2A
....................          output_b(segment[number]); 
0077:  MOVLW  20
0078:  ADDWF  2A,W
0079:  MOVWF  04
007A:  BCF    03.7
007B:  MOVF   00,W
007C:  MOVWF  2E
007D:  BSF    03.5
007E:  CLRF   06
007F:  BCF    03.5
0080:  MOVF   2E,W
0081:  MOVWF  06
....................          while(input(pin_minus)); 
0082:  BSF    03.5
0083:  BSF    05.1
0084:  BCF    03.5
0085:  BTFSC  05.1
0086:  GOTO   082
....................      
....................       } 
0087:  GOTO   03B
....................        
....................    } 
....................  
.................... } 
0088:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
