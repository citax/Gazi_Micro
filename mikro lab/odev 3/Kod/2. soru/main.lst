CCS PCM C Compiler, Version 5.015, 5967               22-Mar-23 19:57

               Filename:   E:\Okul\Mikro\mikro lab\odev 3\Kod\2. soru\main.lst

               ROM used:   229 words (3%)
                           Largest free fragment is 2048
               RAM used:   16 (4%) at main() level
                           17 (5%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   083
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPROTECT  
.................... #use delay(clock=4000000)  
*
003B:  MOVLW  2B
003C:  MOVWF  04
003D:  BCF    03.7
003E:  MOVF   00,W
003F:  BTFSC  03.2
0040:  GOTO   04F
0041:  MOVLW  01
0042:  MOVWF  78
0043:  CLRF   77
0044:  DECFSZ 77,F
0045:  GOTO   044
0046:  DECFSZ 78,F
0047:  GOTO   043
0048:  MOVLW  4A
0049:  MOVWF  77
004A:  DECFSZ 77,F
004B:  GOTO   04A
004C:  GOTO   04D
004D:  DECFSZ 00,F
004E:  GOTO   041
.................... #define start pin_A0 
.................... #define start1 pin_A1 
.................... #define start2 pin_A2 
.................... #define stop  pin_A3 
....................  
.................... int z,x,y = 0x01 ; 
.................... int b,i,m,n; 
.................... int t,j,l; 
.................... void buton_start_1() 
.................... { 
....................    if (input(start)) 
*
0004:  BSF    03.5
0005:  BSF    05.0
0006:  BCF    03.5
0007:  BTFSS  05.0
0008:  GOTO   013
....................    { 
....................       b=1; 
0009:  MOVLW  01
000A:  MOVWF  23
....................       n,i=0; 
000B:  CLRF   24
....................       z = 0x01; 
000C:  MOVWF  20
....................       t=1; 
000D:  MOVWF  27
....................       while(input(start)); 
000E:  BSF    03.5
000F:  BSF    05.0
0010:  BCF    03.5
0011:  BTFSC  05.0
0012:  GOTO   00E
....................    } 
0013:  RETURN
.................... } 
....................  
.................... void buton_start_2() 
.................... { 
....................    if (input(start1)) 
0014:  BSF    03.5
0015:  BSF    05.1
0016:  BCF    03.5
0017:  BTFSS  05.1
0018:  GOTO   023
....................    { 
....................       b=1; 
0019:  MOVLW  01
001A:  MOVWF  23
....................       n,i=0; 
001B:  CLRF   24
....................       x = 0x01; 
001C:  MOVWF  21
....................       j=1; 
001D:  MOVWF  28
....................       while(input(start1)); 
001E:  BSF    03.5
001F:  BSF    05.1
0020:  BCF    03.5
0021:  BTFSC  05.1
0022:  GOTO   01E
....................    } 
0023:  RETURN
.................... } 
....................  
.................... void buton_start_3() 
.................... { 
....................    if (input(start2)) 
0024:  BSF    03.5
0025:  BSF    05.2
0026:  BCF    03.5
0027:  BTFSS  05.2
0028:  GOTO   033
....................    { 
....................       b=1; 
0029:  MOVLW  01
002A:  MOVWF  23
....................       n,i=0; 
002B:  CLRF   24
....................       y = 0x01;  
002C:  MOVWF  22
....................       l=1; 
002D:  MOVWF  29
....................       while(input(start2)); 
002E:  BSF    03.5
002F:  BSF    05.2
0030:  BCF    03.5
0031:  BTFSC  05.2
0032:  GOTO   02E
....................    } 
0033:  RETURN
.................... } 
....................  
.................... void buton_stop() 
.................... { 
....................    if(input(stop)) 
*
004F:  BSF    03.5
0050:  BSF    05.3
0051:  BCF    03.5
0052:  BTFSS  05.3
0053:  GOTO   06B
....................    { 
....................       z,x,y=0x00; 
0054:  CLRF   22
....................       output_b(0x00); 
0055:  BSF    03.5
0056:  CLRF   06
0057:  BCF    03.5
0058:  CLRF   06
....................       output_c(0x00); 
0059:  MOVLW  00
005A:  MOVWF  2A
005B:  BSF    03.5
005C:  CLRF   07
005D:  BCF    03.5
005E:  CLRF   07
....................       output_d(0x00); 
005F:  BSF    03.5
0060:  CLRF   08
0061:  BCF    03.5
0062:  CLRF   08
....................       n=1; 
0063:  MOVLW  01
0064:  MOVWF  26
....................       b,t,j,l=0; 
0065:  CLRF   29
....................       while(input(stop)); 
0066:  BSF    03.5
0067:  BSF    05.3
0068:  BCF    03.5
0069:  BTFSC  05.3
006A:  GOTO   066
....................       break; 
....................    } 
.................... } 
....................  
.................... void delay_button_control() 
.................... { 
....................    for(m=0; m<20; m++) 
*
0034:  CLRF   25
0035:  MOVF   25,W
0036:  SUBLW  13
0037:  BTFSS  03.0
0038:  GOTO   070
....................    { 
....................       delay_ms(5); 
0039:  MOVLW  05
003A:  MOVWF  2B
....................       buton_stop(); 
....................       buton_start_3(); 
*
006B:  CALL   024
....................       buton_start_2(); 
006C:  CALL   014
....................       buton_start_1(); 
006D:  CALL   004
006E:  INCF   25,F
006F:  GOTO   035
....................    } 
....................     
....................    if(n==1) 
0070:  DECFSZ 26,W
0071:  GOTO   080
....................    {   
....................       output_b(0x00); 
0072:  BSF    03.5
0073:  CLRF   06
0074:  BCF    03.5
0075:  CLRF   06
....................       output_c(0x00); 
0076:  MOVLW  00
0077:  MOVWF  2A
0078:  BSF    03.5
0079:  CLRF   07
007A:  BCF    03.5
007B:  CLRF   07
....................       output_d(0x00); 
007C:  BSF    03.5
007D:  CLRF   08
007E:  BCF    03.5
007F:  CLRF   08
....................       break; 
....................    } 
0080:  BCF    0A.3
0081:  BCF    0A.4
0082:  GOTO   0D3 (RETURN)
.................... } 
....................  
.................... void main() 
0083:  MOVF   03,W
0084:  ANDLW  1F
0085:  MOVWF  03
0086:  MOVLW  01
0087:  MOVWF  22
0088:  MOVLW  FF
0089:  MOVWF  2A
008A:  BSF    03.5
008B:  BSF    1F.0
008C:  BSF    1F.1
008D:  BSF    1F.2
008E:  BCF    1F.3
008F:  BCF    03.7
.................... {   
....................    set_tris_a(0xFF); 
0090:  MOVLW  FF
0091:  MOVWF  05
....................    set_tris_b(0x00); 
0092:  MOVLW  00
0093:  MOVWF  06
....................    set_tris_c(0x00); 
0094:  MOVWF  07
0095:  BCF    03.5
0096:  MOVWF  2A
....................    set_tris_d(0x00); 
0097:  BSF    03.5
0098:  MOVWF  08
....................    output_b(0x00); 
0099:  CLRF   06
009A:  BCF    03.5
009B:  CLRF   06
....................    output_c(0x00); 
009C:  MOVWF  2A
009D:  BSF    03.5
009E:  CLRF   07
009F:  BCF    03.5
00A0:  CLRF   07
....................    output_d(0x00); 
00A1:  BSF    03.5
00A2:  CLRF   08
00A3:  BCF    03.5
00A4:  CLRF   08
....................    buton_start_1(); 
00A5:  CALL   004
....................       buton_start_2(); 
00A6:  CALL   014
....................       buton_start_3(); 
00A7:  CALL   024
....................    while(TRUE) 
....................    {   
....................       z,x,y = 0x01 ; 
00A8:  MOVLW  01
00A9:  MOVWF  22
....................       b,i,m,n,t,j,l = 0 ; 
00AA:  CLRF   29
....................       buton_start_1(); 
00AB:  CALL   004
....................       buton_start_2(); 
00AC:  CALL   014
....................       buton_start_3(); 
00AD:  CALL   024
....................       if(b==1) 
00AE:  DECFSZ 23,W
00AF:  GOTO   0E3
....................       {   
....................           
....................       for(;;) 
....................       { 
....................          for(i=0; i<8; i++) 
00B0:  CLRF   24
00B1:  MOVF   24,W
00B2:  SUBLW  07
00B3:  BTFSS  03.0
00B4:  GOTO   0D8
....................          {   
....................             if(t==1){ 
00B5:  DECFSZ 27,W
00B6:  GOTO   0BE
....................             output_b(z); 
00B7:  BSF    03.5
00B8:  CLRF   06
00B9:  BCF    03.5
00BA:  MOVF   20,W
00BB:  MOVWF  06
....................             z = z<<1; 
00BC:  BCF    03.0
00BD:  RLF    20,F
....................             } 
....................             if(j==1){ 
00BE:  DECFSZ 28,W
00BF:  GOTO   0C9
....................             output_c(x); 
00C0:  MOVLW  00
00C1:  MOVWF  2A
00C2:  BSF    03.5
00C3:  CLRF   07
00C4:  BCF    03.5
00C5:  MOVF   21,W
00C6:  MOVWF  07
....................             x = x<<1; 
00C7:  BCF    03.0
00C8:  RLF    21,F
....................             } 
....................             if(l==1){ 
00C9:  DECFSZ 29,W
00CA:  GOTO   0D2
....................             output_d(y); 
00CB:  BSF    03.5
00CC:  CLRF   08
00CD:  BCF    03.5
00CE:  MOVF   22,W
00CF:  MOVWF  08
....................             y = y<<1; 
00D0:  BCF    03.0
00D1:  RLF    22,F
....................             } 
....................             delay_button_control(); 
00D2:  GOTO   034
....................             if(n==1) 
00D3:  DECFSZ 26,W
00D4:  GOTO   0D6
....................             break; 
00D5:  GOTO   0D8
00D6:  INCF   24,F
00D7:  GOTO   0B1
....................          } 
....................          z=0x01; 
00D8:  MOVLW  01
00D9:  MOVWF  20
....................          x=0x01; 
00DA:  MOVWF  21
....................          y=0x01; 
00DB:  MOVWF  22
....................          if(n==1) 
00DC:  DECFSZ 26,W
00DD:  GOTO   0DF
....................          break; 
00DE:  GOTO   0E0
00DF:  GOTO   0B0
....................       } 
....................          if(n==1) 
00E0:  DECFSZ 26,W
00E1:  GOTO   0E3
....................          break; 
00E2:  GOTO   0E4
....................       } 
00E3:  GOTO   0A8
....................       
....................    } 
....................  
.................... } 
00E4:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
