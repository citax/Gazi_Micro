CCS PCM C Compiler, Version 5.015, 5967               22-Mar-23 18:53

               Filename:   E:\Okul\Mikro\mikro lab\odev 3\Kod\main.lst

               ROM used:   131 words (2%)
                           Largest free fragment is 2048
               RAM used:   10 (3%) at main() level
                           11 (3%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   056
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPROTECT  
.................... #use delay(clock=4000000)  
*
003A:  MOVLW  25
003B:  MOVWF  04
003C:  BCF    03.7
003D:  MOVF   00,W
003E:  BTFSC  03.2
003F:  GOTO   04E
0040:  MOVLW  01
0041:  MOVWF  78
0042:  CLRF   77
0043:  DECFSZ 77,F
0044:  GOTO   043
0045:  DECFSZ 78,F
0046:  GOTO   042
0047:  MOVLW  4A
0048:  MOVWF  77
0049:  DECFSZ 77,F
004A:  GOTO   049
004B:  GOTO   04C
004C:  DECFSZ 00,F
004D:  GOTO   040
.................... #define start pin_A0 
.................... #define stop  pin_A2 
.................... int a = 0x01 ; 
.................... int b,i,m,n; 
.................... void buton_start() 
.................... { 
....................    if (input(start) && !input(stop)) 
*
0004:  BSF    03.5
0005:  BSF    05.0
0006:  BCF    03.5
0007:  BTFSS  05.0
0008:  GOTO   017
0009:  BSF    03.5
000A:  BSF    05.2
000B:  BCF    03.5
000C:  BTFSC  05.2
000D:  GOTO   017
....................    { 
....................       b=1; 
000E:  MOVLW  01
000F:  MOVWF  21
....................       n=0; 
0010:  CLRF   24
....................       a = 0x01; 
0011:  MOVWF  20
....................       while(input(start)); 
0012:  BSF    03.5
0013:  BSF    05.0
0014:  BCF    03.5
0015:  BTFSC  05.0
0016:  GOTO   012
....................    } 
0017:  BCF    0A.3
0018:  BCF    0A.4
0019:  GOTO   069 (RETURN)
.................... } 
....................  
.................... void buton_stop() 
.................... { 
....................    if(input(stop) && !input(start)) 
001A:  BSF    03.5
001B:  BSF    05.2
001C:  BCF    03.5
001D:  BTFSS  05.2
001E:  GOTO   032
001F:  BSF    03.5
0020:  BSF    05.0
0021:  BCF    03.5
0022:  BTFSC  05.0
0023:  GOTO   032
....................    { 
....................       a=0x00; 
0024:  CLRF   20
....................       output_b(a); 
0025:  BSF    03.5
0026:  CLRF   06
0027:  BCF    03.5
0028:  MOVF   20,W
0029:  MOVWF  06
....................       n=1; 
002A:  MOVLW  01
002B:  MOVWF  24
....................       b=0; 
002C:  CLRF   21
....................       while(input(stop)); 
002D:  BSF    03.5
002E:  BSF    05.2
002F:  BCF    03.5
0030:  BTFSC  05.2
0031:  GOTO   02D
....................       break; 
....................    } 
0032:  RETURN
.................... } 
....................  
.................... void delay_stop() 
.................... { 
....................    for(m=0; m<20; m++) 
0033:  CLRF   23
0034:  MOVF   23,W
0035:  SUBLW  13
0036:  BTFSS  03.0
0037:  GOTO   051
....................    { 
....................       delay_ms(5); 
0038:  MOVLW  05
0039:  MOVWF  25
....................       buton_stop(); 
*
004E:  CALL   01A
004F:  INCF   23,F
0050:  GOTO   034
....................    } 
....................     
....................    if(n==1) 
0051:  DECFSZ 24,W
0052:  GOTO   053
....................    { 
....................       break; 
....................    } 
0053:  BCF    0A.3
0054:  BCF    0A.4
0055:  GOTO   079 (RETURN)
.................... } 
....................  
.................... void main() 
0056:  MOVF   03,W
0057:  ANDLW  1F
0058:  MOVWF  03
0059:  MOVLW  01
005A:  MOVWF  20
005B:  BSF    03.5
005C:  BSF    1F.0
005D:  BSF    1F.1
005E:  BSF    1F.2
005F:  BCF    1F.3
0060:  BCF    03.7
.................... {   
....................    set_tris_a(0xFF); 
0061:  MOVLW  FF
0062:  MOVWF  05
....................    set_tris_b(0x00); 
0063:  MOVLW  00
0064:  MOVWF  06
....................    output_b(0x00); 
0065:  CLRF   06
0066:  BCF    03.5
0067:  CLRF   06
....................    while(TRUE) 
....................    { 
....................       buton_start(); 
0068:  GOTO   004
....................       buton_stop(); 
0069:  CALL   01A
....................       if(b==1) 
006A:  DECFSZ 21,W
006B:  GOTO   081
....................       {   
....................        
....................       for(;;) 
....................       { 
....................          for(i=0; i<8; i++) 
006C:  CLRF   22
006D:  MOVF   22,W
006E:  SUBLW  07
006F:  BTFSS  03.0
0070:  GOTO   07B
....................          {   
....................             output_b(a); 
0071:  BSF    03.5
0072:  CLRF   06
0073:  BCF    03.5
0074:  MOVF   20,W
0075:  MOVWF  06
....................             a = a<<1; 
0076:  BCF    03.0
0077:  RLF    20,F
....................             delay_stop(); 
0078:  GOTO   033
0079:  INCF   22,F
007A:  GOTO   06D
....................          } 
....................          a=0x01; 
007B:  MOVLW  01
007C:  MOVWF  20
....................          if(n==1) 
007D:  DECFSZ 24,W
007E:  GOTO   080
....................          break; 
007F:  GOTO   081
0080:  GOTO   06C
....................       } 
....................           
....................       } 
0081:  GOTO   068
....................       
....................    } 
....................  
.................... } 
0082:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
