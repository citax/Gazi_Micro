CCS PCM C Compiler, Version 5.015, 5967               22-Mar-23 01:34

               Filename:   E:\Okul\Mikro\mikro\Odev3\Kod\main.lst

               ROM used:   188 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04A
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  3F
0009:  RETLW  06
000A:  RETLW  5B
000B:  RETLW  4F
000C:  RETLW  66
000D:  RETLW  6D
000E:  RETLW  7C
000F:  RETLW  07
0010:  RETLW  7F
0011:  RETLW  6F
0012:  RETLW  77
0013:  RETLW  7C
0014:  RETLW  39
0015:  RETLW  5E
0016:  RETLW  79
0017:  RETLW  71
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4MHz) 
....................  
....................  
.................... #fuses HS, NOWDT, NOPROTECT  
.................... #use delay(clock=4000000)  
*
0035:  MOVLW  28
0036:  MOVWF  04
0037:  BCF    03.7
0038:  MOVF   00,W
0039:  BTFSC  03.2
003A:  GOTO   049
003B:  MOVLW  01
003C:  MOVWF  78
003D:  CLRF   77
003E:  DECFSZ 77,F
003F:  GOTO   03E
0040:  DECFSZ 78,F
0041:  GOTO   03D
0042:  MOVLW  4A
0043:  MOVWF  77
0044:  DECFSZ 77,F
0045:  GOTO   044
0046:  GOTO   047
0047:  DECFSZ 00,F
0048:  GOTO   03B
0049:  RETURN
.................... #define start pin_A0 
.................... #define stop  pin_A2 
.................... int a,i,b,c,d,e = 0; 
.................... const int out[16]={ 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7C, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71}; 
....................  
.................... void input_button() 
.................... { 
....................     if(input(start) == 1) 
*
0018:  BSF    03.5
0019:  BSF    05.0
001A:  BCF    03.5
001B:  BTFSS  05.0
001C:  GOTO   024
....................    {   
....................       c = 0; 
001D:  CLRF   23
....................       a++; 
001E:  INCF   20,F
....................       while(input(start)); 
001F:  BSF    03.5
0020:  BSF    05.0
0021:  BCF    03.5
0022:  BTFSC  05.0
0023:  GOTO   01F
....................    } 
0024:  BCF    0A.3
0025:  BCF    0A.4
0026:  GOTO   06A (RETURN)
.................... } 
.................... void input_button_stop() 
.................... { 
....................    if(input(stop) == 1) 
0027:  BSF    03.5
0028:  BSF    05.2
0029:  BCF    03.5
002A:  BTFSS  05.2
002B:  GOTO   034
....................    {   
....................       c = 44; 
002C:  MOVLW  2C
002D:  MOVWF  23
....................     
....................       a=0; 
002E:  CLRF   20
....................       while(input(stop)); 
002F:  BSF    03.5
0030:  BSF    05.2
0031:  BCF    03.5
0032:  BTFSC  05.2
0033:  GOTO   02F
....................       break; 
....................    } 
0034:  RETURN
....................    
.................... } 
....................  
.................... void main() 
*
004A:  MOVF   03,W
004B:  ANDLW  1F
004C:  MOVWF  03
004D:  CLRF   25
004E:  MOVLW  FF
004F:  MOVWF  26
0050:  BSF    03.5
0051:  BSF    1F.0
0052:  BSF    1F.1
0053:  BSF    1F.2
0054:  BCF    1F.3
0055:  MOVLW  07
0056:  MOVWF  1C
0057:  BCF    03.7
.................... { 
....................    set_tris_a(0xFF); 
0058:  MOVLW  FF
0059:  MOVWF  05
....................    set_tris_b(0x00); 
005A:  MOVLW  00
005B:  MOVWF  06
....................    set_tris_c(0x00); 
005C:  MOVWF  07
005D:  BCF    03.5
005E:  MOVWF  26
....................    output_b(0x00); 
005F:  BSF    03.5
0060:  CLRF   06
0061:  BCF    03.5
0062:  CLRF   06
....................    output_c(0x01); 
0063:  MOVWF  26
0064:  BSF    03.5
0065:  CLRF   07
0066:  MOVLW  01
0067:  BCF    03.5
0068:  MOVWF  07
....................    while(TRUE) 
....................    { 
....................     
....................    input_button(); 
0069:  GOTO   018
....................    input_button_stop(); 
006A:  CALL   027
....................       while(a == 10 && !input(stop)) 
006B:  MOVF   20,W
006C:  SUBLW  0A
006D:  BTFSS  03.2
006E:  GOTO   0BA
006F:  BSF    03.5
0070:  BSF    05.2
0071:  BCF    03.5
0072:  BTFSC  05.2
0073:  GOTO   0BA
....................       {      
....................             input_button_stop(); 
0074:  CALL   027
....................              
....................                      if(c==44){ 
0075:  MOVF   23,W
0076:  SUBLW  2C
0077:  BTFSC  03.2
....................                      break;} 
0078:  GOTO   0BA
....................                       
....................              for(b = 0; b < 50  && !input(stop) ; b++) 
0079:  CLRF   22
007A:  MOVF   22,W
007B:  SUBLW  31
007C:  BTFSS  03.0
007D:  GOTO   0B9
007E:  BSF    03.5
007F:  BSF    05.2
0080:  BCF    03.5
0081:  BTFSC  05.2
0082:  GOTO   0B9
....................            {       
....................                   input_button_stop(); 
0083:  CALL   027
....................                    
....................                      if(c==44){ 
0084:  MOVF   23,W
0085:  SUBLW  2C
0086:  BTFSC  03.2
....................                      break;} 
0087:  GOTO   0B9
....................                       
....................                   for(i = 0; i < 17 && !input(stop) ; i++) 
0088:  CLRF   21
0089:  MOVF   21,W
008A:  SUBLW  10
008B:  BTFSS  03.0
008C:  GOTO   0B3
008D:  BSF    03.5
008E:  BSF    05.2
008F:  BCF    03.5
0090:  BTFSC  05.2
0091:  GOTO   0B3
....................                      { 
....................                            output_b(out[i]); 
0092:  MOVF   21,W
0093:  CALL   004
0094:  MOVWF  27
0095:  BSF    03.5
0096:  CLRF   06
0097:  BCF    03.5
0098:  MOVF   27,W
0099:  MOVWF  06
....................                            delay_ms(300); 
009A:  MOVLW  02
009B:  MOVWF  27
009C:  MOVLW  96
009D:  MOVWF  28
009E:  CALL   035
009F:  DECFSZ 27,F
00A0:  GOTO   09C
....................                            output_b(0x00); 
00A1:  BSF    03.5
00A2:  CLRF   06
00A3:  BCF    03.5
00A4:  CLRF   06
....................                            delay_ms(300); 
00A5:  MOVLW  02
00A6:  MOVWF  27
00A7:  MOVLW  96
00A8:  MOVWF  28
00A9:  CALL   035
00AA:  DECFSZ 27,F
00AB:  GOTO   0A7
....................                            input_button_stop(); 
00AC:  CALL   027
....................                             
....................                      if(c==44){ 
00AD:  MOVF   23,W
00AE:  SUBLW  2C
00AF:  BTFSC  03.2
....................                      break;} 
00B0:  GOTO   0B3
00B1:  INCF   21,F
00B2:  GOTO   089
....................                       
....................                      } 
....................                      if(c==44){ 
00B3:  MOVF   23,W
00B4:  SUBLW  2C
00B5:  BTFSC  03.2
....................                      break;} 
00B6:  GOTO   0B9
00B7:  INCF   22,F
00B8:  GOTO   07A
....................                       
....................                      } 
00B9:  GOTO   06B
....................             }            
00BA:  GOTO   069
....................       } 
....................     
....................    } 
....................     
00BB:  SLEEP
....................     
....................  

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
